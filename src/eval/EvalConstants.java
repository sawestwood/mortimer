package eval;

import core.CoreConstants;

public class EvalConstants {
	// Constants are used as a part of the evaluation function and provide
	// values used in the calculations
	// Max move 'thinking' time (ms)
	public static double THINKING_TIME = 500.0;
	public static double MAX_THINKING_TIME = 1000.0;
	public static double MIN_THINKING_TIME = 30.0;
	// Max search depth
	public static final double MAX_DEPTH = 15;

	// Evaluation constants from
	// https://github.com/albertoruibal/carballo/blob/master/core
	/// src/main/java/com/alonsoruibal/chess/evaluation/CompleteEvaluator.java

	// New identifiers used for colours and piece types
	public static final int WHITE = 1;
	public static final int BLACK = -1;
	public static final int PAWN = 1;
	public static final int KNIGHT = 2;
	public static final int BISHOP = 3;
	public static final int ROOK = 4;
	public static final int QUEEN = 5;
	public static final int KING = 6;

	// Converts the id numbers used in the Core package to the id numbers above
	public static final int[] PIECE_CORE_TO_EVAL = { 0, 0, 1, 1, 2, 2,
			4, 4, 3, 3, 5, 5, 6, 6 };

	// Standard evaluation values used for checkmate, draws, etc
	public static final int MATE = 30000;
	public static final int WIN = 20000;
	public static final int DRAW = 0;
	public static final int NO_VALUE = Short.MAX_VALUE;
	public static final int KNOWN_WIN = 20000;

	// The set of all the black and white squares
	public static final long BLACK_SQUARES = 0x55aa55aa55aa55aaL;
	public static final long WHITE_SQUARES = 0xaa55aa55aa55aa55L;

	// Values for each of the pieces, indexed by ID numbers above
	public static final int[] PIECE_VALUE = { 0, 100, 325, 325, 500,
			975 };
	// Some pieces are more useful in the endgame, here values
	public static final int[] PIECE_VALUE_PHASE = { 0, 100,
			S(80, 325), 325, 500, 975 };
	// The bonus for having both bishops
	public static final int BISHOP_PAIR = S(50, 50);
	public static final int PHASE_MIDGAME = 1000;
	public static final int PHASE_ENDGAME = 0;
	// Minimum value of material to be in the endgame (1 rook + 1 queen)
	public static final int MAT_ENDGAME_MIN = PIECE_VALUE[QUEEN]
			+ PIECE_VALUE[ROOK];
	// Maximum value of material to be in the midgame
	public static final int MAT_MIDGAME_MAX = (3
			* PIECE_VALUE[KNIGHT]) + (3 * PIECE_VALUE[BISHOP])
			+ (4 * PIECE_VALUE[ROOK]) + (2 * PIECE_VALUE[QUEEN]);
	// Bonuses based on how many moves are available indexed by piece id and
	// then number of moves available
	public static final int[][] MOBILITY = { {}, {},
			{ S(-12, -16), S(2, 2), S(5, 7), S(7, 9), S(8, 11),
					S(10, 13), S(11, 14), S(11, 15), S(12, 16) },
			{ S(-16, -16), S(-1, -1), S(3, 3), S(6, 6), S(8, 8),
					S(9, 9), S(11, 11), S(12, 12), S(13, 13),
					S(13, 13), S(14, 14), S(15, 15), S(15, 15),
					S(16, 16) },
			{ S(-14, -21), S(-1, -2), S(3, 4), S(5, 7), S(7, 10),
					S(8, 12), S(9, 13), S(10, 15), S(11, 16),
					S(11, 17), S(12, 18), S(13, 19), S(13, 20),
					S(14, 20), S(14, 21) },
			{ S(-27, -27), S(-9, -9), S(-2, -2), S(2, 2), S(5, 5),
					S(8, 8), S(10, 10), S(12, 12), S(13, 13),
					S(14, 14), S(16, 16), S(17, 17), S(18, 18),
					S(19, 19), S(19, 19), S(20, 20), S(21, 21),
					S(22, 22), S(22, 22), S(23, 23), S(24, 24),
					S(24, 24), S(25, 25), S(25, 25), S(26, 26),
					S(26, 26), S(27, 27), S(27, 27) } };
	// Key areas of space for white and black players
	public static final long WHITE_SPACE = (CoreConstants.FILE_C
			| CoreConstants.FILE_D | CoreConstants.FILE_E
			| CoreConstants.FILE_F)
			& (CoreConstants.ROW_2 | CoreConstants.ROW_3
					| CoreConstants.ROW_4);
	public static final long BLACK_SPACE = (CoreConstants.FILE_C
			| CoreConstants.FILE_D | CoreConstants.FILE_E
			| CoreConstants.FILE_F)
			& (CoreConstants.ROW_5 | CoreConstants.ROW_6
					| CoreConstants.ROW_7);
	public static final int SPACE = S(2, 0);

	// Bonuses based on attack types
	public static final int[] PAWN_ATTACKS = { 0, 0, S(11, 15),
			S(12, 16), S(17, 23), S(19, 25), 0 };
	public static final int[] MINOR_ATTACKS = { 0, S(3, 5), S(7, 9),
			S(7, 9), S(10, 14), S(11, 15), 0 };
	public static final int[] MAJOR_ATTACKS = { 0, S(2, 2), S(3, 4),
			S(3, 4), S(5, 6), S(5, 7), 0 };

	// Penalties for having hung or pinned pieces
	public static final int HUNG_PIECES = S(16, 25);
	public static final int PINNED_PIECE = S(7, 15);

	// Penalties based on pawn structure
	public static final int[] PAWN_BACKWARDS = { S(20, 15),
			S(10, 15) };
	public static final int[] PAWN_ISOLATED = { S(20, 20),
			S(10, 20) };
	public static final int[] PAWN_DOUBLED = { S(8, 16), S(10, 20) };
	public static final int PAWN_UNSUPPORTED = S(2, 4);
	public static final int[] PAWN_CANDIDATE = { 0, S(10, 13),
			S(10, 13), S(14, 18), S(22, 28), S(34, 43), S(50, 63),
			0 };
	public static final int[] PAWN_PASSER = { 0, S(20, 25), S(20, 25),
			S(28, 35), S(44, 55), S(68, 85), S(100, 125), 0 };
	public static final int[] PAWN_PASSER_OUTSIDE = { 0, 0, 0,
			S(2, 3), S(7, 9), S(14, 18), S(24, 30), 0 };
	public static final int[] PAWN_PASSER_CONNECTED = { 0, 0, 0,
			S(2, 3), S(7, 9), S(14, 18), S(24, 30), 0 };
	public static final int[] PAWN_PASSER_SUPPORTED = { 0, 0, 0,
			S(6, 6), S(17, 17), S(33, 33), S(55, 55), 0 };
	public static final int[] PAWN_PASSER_MOBILE = { 0, 0, 0, S(2, 2),
			S(6, 6), S(12, 12), S(20, 20), 0 };
	public static final int[] PAWN_PASSER_RUNNER = { 0, 0, 0, S(6, 6),
			S(18, 18), S(36, 36), S(60, 60), 0 };
	public static final int[] PAWN_PASSER_OTHER_KING_DISTANCE = { 0,
			0, 0, S(0, 2), S(0, 6), S(0, 12), S(0, 20), 0 };
	public static final int[] PAWN_PASSER_MY_KING_DISTANCE = { 0, 0,
			0, S(0, 1), S(0, 3), S(0, 6), S(0, 10), 0 };

	public static final int[] PAWN_SHIELD_CENTER = { 0, S(55, 0),
			S(41, 0), S(28, 0), S(14, 0), 0, 0, 0 };
	public static final int[] PAWN_SHIELD = { 0, S(35, 0), S(26, 0),
			S(18, 0), S(9, 0), 0, 0, 0 };
	public static final int[] PAWN_STORM_CENTER = { 0, 0, 0, S(8, 0),
			S(15, 0), S(30, 0), 0, 0 };
	public static final int[] PAWN_STORM = { 0, 0, 0, S(5, 0),
			S(10, 0), S(20, 0), 0, 0 };

	public static final int PAWN_BLOCKADE = S(5, 0);

	// Values for the structure of other pieces
	public static final int[] KNIGHT_OUTPOST = { S(15, 10),
			S(22, 15) };
	public static final int[] BISHOP_OUTPOST = { S(7, 4), S(10, 7) };
	// Penalty if a player's own pawn blocks their bishop from moving
	public static final int BISHOP_MY_PAWNS_IN_COLOR_PENALTY = S(2,
			4);
	public static final int[] BISHOP_TRAPPED_PENALTY = { S(40, 40),
			S(80, 80) };
	// Places on the board where bishop can get trapped
	public static final long[] BISHOP_TRAPPING = { 0, Board.C2, 0, 0,
			0, 0, Board.F2, 0, Board.B3, 0, 0, 0, 0, 0, 0, Board.G3,
			Board.B4, 0, 0, 0, 0, 0, 0, Board.G4, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, Board.B5, 0, 0, 0, 0, 0, 0,
			Board.G5, Board.B6, 0, 0, 0, 0, 0, 0, Board.G6, 0,
			Board.C7, 0, 0, 0, 0, Board.F7, 0 };
	public static final long[] BISHOP_TRAPPING_GUARD = { 0, 0, 0, 0,
			0, 0, 0, 0, Board.C2, 0, 0, 0, 0, 0, 0, Board.F2,
			Board.C3, 0, 0, 0, 0, 0, 0, Board.F3, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, Board.C6, 0, 0, 0, 0, 0, 0,
			Board.F6, Board.C7, 0, 0, 0, 0, 0, 0, Board.F7, 0, 0, 0,
			0, 0, 0, 0, 0 };

	public static final int[] ROOK_OUTPOST = { S(2, 1), S(3, 2) };
	public static final int[] ROOK_FILE = { S(15, 10), S(7, 5) };
	public static final int ROOK_7 = S(7, 10);
	public static final int[] ROOK_TRAPPED_PENALTY = { S(40, 0),
			S(30, 0), S(20, 0), S(10, 0) };

	// Positions where a rook can get trapped
	public static final long[] ROOK_TRAPPING = { 0,
			(Board.A1 | Board.A2),
			(Board.A1 | Board.A2 | Board.B1 | Board.B2), 0, 0,
			(Board.H1 | Board.H2 | Board.G1 | Board.G2),
			(Board.H1 | Board.H2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			(Board.A7 | Board.A8),
			(Board.A7 | Board.A8 | Board.B7 | Board.B8), 0, 0,
			(Board.H7 | Board.H8 | Board.G7 | Board.G8),
			(Board.H7 | Board.H8), 0 };

	// Benefits for attacking the king
	public static final int PIECE_ATTACKS_KING[] = { 0, 0, S(30, 0),
			S(20, 0), S(40, 0), S(80, 0) };
	public static final int[] KING_SAFETY_PONDER = { 0, 0, 32, 48, 56,
			60, 62, 63, 64, 64, 64, 64, 64, 64, 64, 64 };
	public static final int TEMPO = S(15, 5); // Add to moving side score

	public static final long[] OUTPOST_MASK = { 0x00007e7e7e000000L,
			0x0000007e7e7e0000L };
	// These arrays return values based on how good a position each piece is in
	// Indexed by the position of the piece
	public static final int POS_PAWN[] = { S(-18, 4), S(-6, 2),
			S(0, 0), S(6, -2), S(6, -2), S(0, 0), S(-6, 2), S(-18, 4),
			S(-21, 1), S(-9, -1), S(-3, -3), S(3, -5), S(3, -5),
			S(-3, -3), S(-9, -1), S(-21, 1), S(-20, 1), S(-8, -1),
			S(-2, -3), S(4, -5), S(4, -5), S(-2, -3), S(-8, -1),
			S(-20, 1), S(-19, 2), S(-7, 0), S(-1, -2), S(12, -4),
			S(12, -4), S(-1, -2), S(-7, 0), S(-19, 2), S(-17, 3),
			S(-5, 1), S(1, -1), S(10, -3), S(10, -3), S(1, -1),
			S(-5, 1), S(-17, 3), S(-16, 4), S(-4, 2), S(2, 0),
			S(8, -2), S(8, -2), S(2, 0), S(-4, 2), S(-16, 4),
			S(-15, 6), S(-3, 4), S(3, 2), S(9, 0), S(9, 0), S(3, 2),
			S(-3, 4), S(-15, 6), S(-18, 4), S(-6, 2), S(0, 0),
			S(6, -2), S(6, -2), S(0, 0), S(-6, 2), S(-18, 4) };
	public static final int POS_KNIGHT[] = { S(-27, -22), S(-17, -17),
			S(-9, -12), S(-4, -9), S(-4, -9), S(-9, -12), S(-17, -17),
			S(-27, -22), S(-21, -15), S(-11, -8), S(-3, -4), S(2, -2),
			S(2, -2), S(-3, -4), S(-11, -8), S(-21, -15), S(-15, -10),
			S(-5, -4), S(3, 1), S(8, 3), S(8, 3), S(3, 1), S(-5, -4),
			S(-15, -10), S(-9, -6), S(1, -1), S(9, 4), S(14, 8),
			S(14, 8), S(9, 4), S(1, -1), S(-9, -6), S(-5, -4),
			S(5, 1), S(13, 6), S(18, 10), S(18, 10), S(13, 6),
			S(5, 1), S(-5, -4), S(-6, -4), S(4, 2), S(12, 7),
			S(17, 9), S(17, 9), S(12, 7), S(4, 2), S(-6, -4),
			S(-10, -8), S(0, -1), S(8, 3), S(13, 5), S(13, 5),
			S(8, 3), S(0, -1), S(-10, -8), S(-20, -15), S(-10, -10),
			S(-2, -5), S(3, -2), S(3, -2), S(-2, -5), S(-10, -10),
			S(-20, -15) };
	public static final int POS_BISHOP[] = { S(-7, 0), S(-8, -1),
			S(-11, -2), S(-13, -2), S(-13, -2), S(-11, -2), S(-8, -1),
			S(-7, 0), S(-3, -1), S(3, 1), S(0, 0), S(-2, 0), S(-2, 0),
			S(0, 0), S(3, 1), S(-3, -1), S(-6, -2), S(0, 0), S(7, 3),
			S(6, 2), S(6, 2), S(7, 3), S(0, 0), S(-6, -2), S(-8, -2),
			S(-2, 0), S(6, 2), S(15, 5), S(15, 5), S(6, 2), S(-2, 0),
			S(-8, -2), S(-8, -2), S(-2, 0), S(6, 2), S(15, 5),
			S(15, 5), S(6, 2), S(-2, 0), S(-8, -2), S(-6, -2),
			S(0, 0), S(7, 3), S(6, 2), S(6, 2), S(7, 3), S(0, 0),
			S(-6, -2), S(-3, -1), S(3, 1), S(0, 0), S(-2, 0),
			S(-2, 0), S(0, 0), S(3, 1), S(-3, -1), S(-2, 0),
			S(-3, -1), S(-6, -2), S(-8, -2), S(-8, -2), S(-6, -2),
			S(-3, -1), S(-2, 0) };
	public static final int POS_ROOK[] = { S(-4, 0), S(0, 0), S(4, 0),
			S(8, 0), S(8, 0), S(4, 0), S(0, 0), S(-4, 0), S(-4, 0),
			S(0, 0), S(4, 0), S(8, 0), S(8, 0), S(4, 0), S(0, 0),
			S(-4, 0), S(-4, 0), S(0, 0), S(4, 0), S(8, 0), S(8, 0),
			S(4, 0), S(0, 0), S(-4, 0), S(-4, 0), S(0, 0), S(4, 0),
			S(8, 0), S(8, 0), S(4, 0), S(0, 0), S(-4, 0), S(-4, 1),
			S(0, 1), S(4, 1), S(8, 1), S(8, 1), S(4, 1), S(0, 1),
			S(-4, 1), S(-4, 3), S(0, 3), S(4, 3), S(8, 3), S(8, 3),
			S(4, 3), S(0, 3), S(-4, 3), S(-4, 5), S(0, 5), S(4, 5),
			S(8, 5), S(8, 5), S(4, 5), S(0, 5), S(-4, 5), S(-4, -2),
			S(0, -2), S(4, -2), S(8, -2), S(8, -2), S(4, -2),
			S(0, -2), S(-4, -2) };
	public static final int POS_QUEEN[] = { S(-9, -15), S(-6, -10),
			S(-4, -8), S(-2, -7), S(-2, -7), S(-4, -8), S(-6, -10),
			S(-9, -15), S(-6, -10), S(-1, -5), S(1, -3), S(3, -2),
			S(3, -2), S(1, -3), S(-1, -5), S(-6, -10), S(-4, -8),
			S(1, -3), S(5, 0), S(6, 2), S(6, 2), S(5, 0), S(1, -3),
			S(-4, -8), S(-2, -7), S(3, -2), S(6, 2), S(9, 5), S(9, 5),
			S(6, 2), S(3, -2), S(-2, -7), S(-2, -7), S(3, -2),
			S(6, 2), S(9, 5), S(9, 5), S(6, 2), S(3, -2), S(-2, -7),
			S(-4, -8), S(1, -3), S(5, 0), S(6, 2), S(6, 2), S(5, 0),
			S(1, -3), S(-4, -8), S(-6, -10), S(-1, -5), S(1, -3),
			S(3, -2), S(3, -2), S(1, -3), S(-1, -5), S(-6, -10),
			S(-9, -15), S(-6, -10), S(-4, -8), S(-2, -7), S(-2, -7),
			S(-4, -8), S(-6, -10), S(-9, -15) };
	public static final int POS_KING[] = { S(34, -58), S(39, -35),
			S(14, -19), S(-6, -13), S(-6, -13), S(14, -19),
			S(39, -35), S(34, -58), S(31, -35), S(36, -10), S(11, 2),
			S(-9, 8), S(-9, 8), S(11, 2), S(36, -10), S(31, -35),
			S(28, -19), S(33, 2), S(8, 17), S(-12, 23), S(-12, 23),
			S(8, 17), S(33, 2), S(28, -19), S(25, -13), S(30, 8),
			S(5, 23), S(-15, 32), S(-15, 32), S(5, 23), S(30, 8),
			S(25, -13), S(20, -13), S(25, 8), S(0, 23), S(-20, 32),
			S(-20, 32), S(0, 23), S(25, 8), S(20, -13), S(15, -19),
			S(20, 2), S(-5, 17), S(-25, 23), S(-25, 23), S(-5, 17),
			S(20, 2), S(15, -19), S(5, -35), S(10, -10), S(-15, 2),
			S(-35, 8), S(-35, 8), S(-15, 2), S(10, -10), S(5, -35),
			S(-5, -58), S(0, -35), S(-25, -19), S(-45, -13),
			S(-45, -13), S(-25, -19), S(0, -35), S(-5, -58) };
	// This array stores all the perumtations of King Pawn King endgame and
	// returns the status of the endgame i.e. whether it is a win or a draw for
	// the side with the pawn
	// These values have been derived from the open source chess engine
	// Stockfish. The index is calculated using the indices of the king and pawn
	// of the dominating player
	public static int[] BITBASE = { 0xfffffcfc, 0xff7fffff,
			0xfffff8f8, 0xff7fffff, 0xfffff1f1, 0xff7fffff,
			0xffffe3e3, 0xff7fffff, 0xffffc7c7, 0xff7fffff,
			0xffff8f8f, 0xff7fffff, 0xffff1f1f, 0xff7fffff,
			0xffff3f3f, 0xff7fffff, 0xfffcfcfc, 0xff7fffff,
			0xfff8f8f8, 0xff7fffff, 0xfff1f1f1, 0xff7fffff,
			0xffe3e3e3, 0xff7fffff, 0xffc7c7c7, 0xff7fffff,
			0xff8f8f8f, 0xff7fffff, 0xff1f1f1f, 0xff7fffff,
			0xff3f3f3f, 0xff7fffff, 0xfcfcfcff, 0xff7fffff,
			0xf8f8f8ff, 0xff7fffff, 0xf1f1f1ff, 0xff7fffff,
			0xe3e3e3ff, 0xff7fffff, 0xc7c7c7ff, 0xff7fffff,
			0x8f8f8fff, 0xff7fffff, 0x1f1f1fff, 0xff7fffff,
			0x3f3f3fff, 0xff7fffff, 0xfcfcffff, 0xff7ffffc,
			0xf8f8ffff, 0xff7ffff8, 0xf1f1ffff, 0xff7ffff1,
			0xe3e3ffff, 0xff7fffe3, 0xc7c7ffff, 0xff7fffc7,
			0x8f8fffff, 0xff7fff8f, 0x1f1fffff, 0xff7fff1f,
			0x3f3fffff, 0xff7fff3f, 0xfcffffff, 0xff7ffcfc,
			0xf8ffffff, 0xff7ff8f8, 0xf1ffffff, 0xff7ff1f1,
			0xe3ffffff, 0xff7fe3e3, 0xc7ffffff, 0xff7fc7c7,
			0x8fffffff, 0xff7f8f8f, 0x1fffffff, 0xff7f1f1f,
			0x3fffffff, 0xff7f3f3f, 0xffffffff, 0xff7cfcfc,
			0xffffffff, 0xff78f8f8, 0xffffffff, 0xff71f1f1,
			0xffffffff, 0xff63e3e3, 0xffffffff, 0x7f47c7c7, 0x0,
			0x60008000, 0x0, 0x40000000, 0x0, 0xc0000000, 0xffffffff,
			0xfc7cfcff, 0xffffffff, 0xf878f8ff, 0xffffffff,
			0xf171f1ff, 0xffffffff, 0xe363e3ff, 0xffffffff,
			0x4747c7ff, 0x0, 0x8000, 0x0, 0x0, 0x0, 0x0, 0xffffffff,
			0xfc7cffff, 0xffffffff, 0xf878ffff, 0xffffffff,
			0xf171ffff, 0xffffffff, 0xe363ffff, 0xffffffff,
			0x4747ffff, 0x0, 0xe000, 0x0, 0x0, 0x0, 0x0, 0xfffffcfc,
			0xff7fffff, 0xfffff8f8, 0xff7fffff, 0xfffff1f1,
			0xff7fffff, 0xffffe3e3, 0xff7fffff, 0xffffc7c7,
			0xff7fffff, 0xffff8f8f, 0xff7fffff, 0xffff1f1f,
			0xff7fffff, 0xffff3f3f, 0xff7fffff, 0xfffcfcfc,
			0xff7fffff, 0xfff8f8f8, 0xff7fffff, 0xfff1f1f1,
			0xff7fffff, 0xffe3e3e3, 0xff7fffff, 0xffc7c7c7,
			0xff7fffff, 0xff8f8f8f, 0xff7fffff, 0xff1f1f1f,
			0xff7fffff, 0xff3f3f3f, 0xff7fffff, 0xfcfcfcff,
			0xff7fffff, 0xf8f8f8ff, 0xff7fffff, 0xf1f1f1ff,
			0xff7fffff, 0xe3e3e3ff, 0xff7fffff, 0xc7c7c7ff,
			0xff7fffff, 0x8f8f8fff, 0xff7fffff, 0x1f1f1fff,
			0xff7fffff, 0x3f3f3fff, 0xff7fffff, 0xfcfcffff,
			0xff7ffffc, 0xf8f8ffff, 0xff7ffff8, 0xf1f1ffff,
			0xff7ffff1, 0xe3e3ffff, 0xff7fffe3, 0xc7c7ffff,
			0xff7fffc7, 0x8f8fffff, 0xff7fff8f, 0x1f1fffff,
			0xff7fff1f, 0x3f3fffff, 0xff7fff3f, 0xfcffffff,
			0xff7ffcfc, 0xf8ffffff, 0xff7ff8f8, 0xf1ffffff,
			0xff7ff1f1, 0xe3ffffff, 0xff7fe3e3, 0xc7ffffff,
			0xff7fc7c7, 0x8fffffff, 0xff7f8f8f, 0x1fffffff,
			0xff7f1f1f, 0x3fffffff, 0xff7f3f3f, 0xffffffff,
			0xff7cfcfc, 0xffffffff, 0xff78f8f8, 0xffffffff,
			0xff71f1f1, 0xffffffff, 0xff63e3e3, 0xffffffff,
			0xff47c7c7, 0xffffffff, 0xff0f8f8f, 0xffffffff,
			0xff1f1f1f, 0xffffffff, 0xff3f3f3f, 0xffffffff,
			0xfc7cfcff, 0xffffffff, 0xf878f8ff, 0xffffffff,
			0xf171f1ff, 0xffffffff, 0xe363e3ff, 0xffffffff,
			0xc747c7ff, 0xffffffff, 0xf0f8fff, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfc7cffff, 0xffffffff, 0xf878ffff,
			0xffffffff, 0xf171ffff, 0xffffffff, 0xe363ffff,
			0xffffffff, 0xc747ffff, 0xffffffff, 0xf0fffff, 0x0, 0x0,
			0x0, 0x0, 0xfffffcfc, 0xffbfffff, 0xfffff8f8, 0xffbfffff,
			0xfffff1f1, 0xffbfffff, 0xffffe3e3, 0xffbfffff,
			0xffffc7c7, 0xffbfffff, 0xffff8f8f, 0xffbfffff,
			0xffff1f1f, 0xffbfffff, 0xffff3f3f, 0xffbfffff,
			0xfffcfcfc, 0xffbfffff, 0xfff8f8f8, 0xffbfffff,
			0xfff1f1f1, 0xffbfffff, 0xffe3e3e3, 0xffbfffff,
			0xffc7c7c7, 0xffbfffff, 0xff8f8f8f, 0xffbfffff,
			0xff1f1f1f, 0xffbfffff, 0xff3f3f3f, 0xffbfffff,
			0xfcfcfcff, 0xffbfffff, 0xf8f8f8ff, 0xffbfffff,
			0xf1f1f1ff, 0xffbfffff, 0xe3e3e3ff, 0xffbfffff,
			0xc7c7c7ff, 0xffbfffff, 0x8f8f8fff, 0xffbfffff,
			0x1f1f1fff, 0xffbfffff, 0x3f3f3fff, 0xffbfffff,
			0xfcfcffff, 0xffbffffc, 0xf8f8ffff, 0xffbffff8,
			0xf1f1ffff, 0xffbffff1, 0xe3e3ffff, 0xffbfffe3,
			0xc7c7ffff, 0xffbfffc7, 0x8f8fffff, 0xffbfff8f,
			0x1f1fffff, 0xffbfff1f, 0x3f3fffff, 0xffbfff3f,
			0xfcffffff, 0xffbffcfc, 0xf8ffffff, 0xffbff8f8,
			0xf1ffffff, 0xffbff1f1, 0xe3ffffff, 0xffbfe3e3,
			0xc7ffffff, 0xffbfc7c7, 0x8fffffff, 0xffbf8f8f,
			0x1fffffff, 0xffbf1f1f, 0x3fffffff, 0xffbf3f3f,
			0xffffffff, 0xffbcfcfc, 0xffffffff, 0xffb8f8f8,
			0xffffffff, 0xffb1f1f1, 0xffffffff, 0xffa3e3e3, 0x0,
			0xf080c000, 0x0, 0xe0808000, 0x0, 0xe0000000, 0x0,
			0xe0202000, 0xffffffff, 0xfcbcfcff, 0xffffffff,
			0xf8b8f8ff, 0xffffffff, 0xf1b1f1ff, 0xffffffff,
			0xe3a3e3ff, 0x0, 0xc080c000, 0x0, 0x80800000, 0x0, 0x0,
			0x0, 0x20200000, 0xffffffff, 0xfcbcffff, 0xffffffff,
			0xf8b8ffff, 0xffffffff, 0xf1b1ffff, 0xffffffff,
			0xe3a3ffff, 0x0, 0xc080f000, 0x0, 0x80804000, 0x0, 0xa000,
			0x0, 0x20204000, 0xfffffcfc, 0xffbfffff, 0xfffff8f8,
			0xffbfffff, 0xfffff1f1, 0xffbfffff, 0xffffe3e3,
			0xffbfffff, 0xffffc7c7, 0xffbfffff, 0xffff8f8f,
			0xffbfffff, 0xffff1f1f, 0xffbfffff, 0xffff3f3f,
			0xffbfffff, 0xfffcfcfc, 0xffbfffff, 0xfff8f8f8,
			0xffbfffff, 0xfff1f1f1, 0xffbfffff, 0xffe3e3e3,
			0xffbfffff, 0xffc7c7c7, 0xffbfffff, 0xff8f8f8f,
			0xffbfffff, 0xff1f1f1f, 0xffbfffff, 0xff3f3f3f,
			0xffbfffff, 0xfcfcfcff, 0xffbfffff, 0xf8f8f8ff,
			0xffbfffff, 0xf1f1f1ff, 0xffbfffff, 0xe3e3e3ff,
			0xffbfffff, 0xc7c7c7ff, 0xffbfffff, 0x8f8f8fff,
			0xffbfffff, 0x1f1f1fff, 0xffbfffff, 0x3f3f3fff,
			0xffbfffff, 0xfcfcffff, 0xffbffffc, 0xf8f8ffff,
			0xffbffff8, 0xf1f1ffff, 0xffbffff1, 0xe3e3ffff,
			0xffbfffe3, 0xc7c7ffff, 0xffbfffc7, 0x8f8fffff,
			0xffbfff8f, 0x1f1fffff, 0xffbfff1f, 0x3f3fffff,
			0xffbfff3f, 0xfcffffff, 0xffbffcfc, 0xf8ffffff,
			0xffbff8f8, 0xf1ffffff, 0xffbff1f1, 0xe3ffffff,
			0xffbfe3e3, 0xc7ffffff, 0xffbfc7c7, 0x8fffffff,
			0xffbf8f8f, 0x1fffffff, 0xffbf1f1f, 0x3fffffff,
			0xffbf3f3f, 0xffffffff, 0xffbcfcfc, 0xffffffff,
			0xffb8f8f8, 0xffffffff, 0xffb1f1f1, 0xffffffff,
			0xffa3e3e3, 0xffffffff, 0xff87c7c7, 0xffffffff,
			0xff8f8f8f, 0xffffffff, 0xff1f1f1f, 0xffffffff,
			0xff3f3f3f, 0xffffffff, 0xfcbcfcff, 0xffffffff,
			0xf8b8f8ff, 0xffffffff, 0xf1b1f1ff, 0xffffffff,
			0xe3a3e3ff, 0xffffffff, 0xc787c7ff, 0x0, 0x80808000, 0x0,
			0x0, 0x0, 0x30303000, 0xffffffff, 0xfcbcffff, 0xffffffff,
			0xf8b8ffff, 0xffffffff, 0xf1b1ffff, 0xffffffff,
			0xe3a3ffff, 0xffffffff, 0xc787ffff, 0x0, 0x0, 0x0,
			0x1050f0, 0x0, 0x0, 0xfffffcfc, 0xffdfffff, 0xfffff8f8,
			0xffdfffff, 0xfffff1f1, 0xffdfffff, 0xffffe3e3,
			0xffdfffff, 0xffffc7c7, 0xffdfffff, 0xffff8f8f,
			0xffdfffff, 0xffff1f1f, 0xffdfffff, 0xffff3f3f,
			0xffdfffff, 0xfffcfcfc, 0xffdfffff, 0xfff8f8f8,
			0xffdfffff, 0xfff1f1f1, 0xffdfffff, 0xffe3e3e3,
			0xffdfffff, 0xffc7c7c7, 0xffdfffff, 0xff8f8f8f,
			0xffdfffff, 0xff1f1f1f, 0xffdfffff, 0xff3f3f3f,
			0xffdfffff, 0xfcfcfcff, 0xffdfffff, 0xf8f8f8ff,
			0xffdfffff, 0xf1f1f1ff, 0xffdfffff, 0xe3e3e3ff,
			0xffdfffff, 0xc7c7c7ff, 0xffdfffff, 0x8f8f8fff,
			0xffdfffff, 0x1f1f1fff, 0xffdfffff, 0x3f3f3fff,
			0xffdfffff, 0xfcfcffff, 0xffdffffc, 0xf8f8ffff,
			0xffdffff8, 0xf1f1ffff, 0xffdffff1, 0xe3e3ffff,
			0xffdfffe3, 0xc7c7ffff, 0xffdfffc7, 0x8f8fffff,
			0xffdfff8f, 0x1f1fffff, 0xffdfff1f, 0x3f3fffff,
			0xffdfff3f, 0xfcffffff, 0xffdffcfc, 0xf8ffffff,
			0xffdff8f8, 0xf1ffffff, 0xffdff1f1, 0xe3ffffff,
			0xffdfe3e3, 0xc7ffffff, 0xffdfc7c7, 0x8fffffff,
			0xffdf8f8f, 0x1fffffff, 0xffdf1f1f, 0x3fffffff,
			0xffdf3f3f, 0xffffffff, 0xffdcfcfc, 0xffffffff,
			0xffd8f8f8, 0xffffffff, 0xffd1f1f1, 0x0, 0xf8c0e000, 0x0,
			0x70404000, 0x0, 0x70000000, 0x0, 0x70101000, 0x0,
			0xf8183800, 0xffffffff, 0xfcdcfcff, 0xffffffff,
			0xf8d8f8ff, 0xffffffff, 0xf1d1f1ff, 0x0, 0xe0c0e000, 0x0,
			0x40400000, 0x0, 0x0, 0x0, 0x10100000, 0x0, 0x38183800,
			0xffffffff, 0xfcdcffff, 0xffffffff, 0xf8d8ffff,
			0xffffffff, 0xf1d1ffff, 0x0, 0xe0c0f800, 0x0, 0x40402000,
			0x0, 0x5000, 0x0, 0x10102000, 0x0, 0x38183800, 0xfffffcfc,
			0xffdfffff, 0xfffff8f8, 0xffdfffff, 0xfffff1f1,
			0xffdfffff, 0xffffe3e3, 0xffdfffff, 0xffffc7c7,
			0xffdfffff, 0xffff8f8f, 0xffdfffff, 0xffff1f1f,
			0xffdfffff, 0xffff3f3f, 0xffdfffff, 0xfffcfcfc,
			0xffdfffff, 0xfff8f8f8, 0xffdfffff, 0xfff1f1f1,
			0xffdfffff, 0xffe3e3e3, 0xffdfffff, 0xffc7c7c7,
			0xffdfffff, 0xff8f8f8f, 0xffdfffff, 0xff1f1f1f,
			0xffdfffff, 0xff3f3f3f, 0xffdfffff, 0xfcfcfcff,
			0xffdfffff, 0xf8f8f8ff, 0xffdfffff, 0xf1f1f1ff,
			0xffdfffff, 0xe3e3e3ff, 0xffdfffff, 0xc7c7c7ff,
			0xffdfffff, 0x8f8f8fff, 0xffdfffff, 0x1f1f1fff,
			0xffdfffff, 0x3f3f3fff, 0xffdfffff, 0xfcfcffff,
			0xffdffffc, 0xf8f8ffff, 0xffdffff8, 0xf1f1ffff,
			0xffdffff1, 0xe3e3ffff, 0xffdfffe3, 0xc7c7ffff,
			0xffdfffc7, 0x8f8fffff, 0xffdfff8f, 0x1f1fffff,
			0xffdfff1f, 0x3f3fffff, 0xffdfff3f, 0xfcffffff,
			0xffdffcfc, 0xf8ffffff, 0xffdff8f8, 0xf1ffffff,
			0xffdff1f1, 0xe3ffffff, 0xffdfe3e3, 0xc7ffffff,
			0xffdfc7c7, 0x8fffffff, 0xffdf8f8f, 0x1fffffff,
			0xffdf1f1f, 0x3fffffff, 0xffdf3f3f, 0xffffffff,
			0xffdcfcfc, 0xffffffff, 0xffd8f8f8, 0xffffffff,
			0xffd1f1f1, 0xffffffff, 0xffc3e3e3, 0xffffffff,
			0xffc7c7c7, 0xffffffff, 0xff8f8f8f, 0xffffffff,
			0xff1f1f1f, 0xffffffff, 0xff1f3f3f, 0xffffffff,
			0xfcdcfcff, 0xffffffff, 0xf8d8f8ff, 0xffffffff,
			0xf1d1f1ff, 0xffffffff, 0xe3c3e3ff, 0x0, 0xc0c0c000, 0x0,
			0x0, 0x0, 0x18181800, 0xffffffff, 0x3f1f3fff, 0xffffffff,
			0xfcdcffff, 0xffffffff, 0xf8d8ffff, 0xffffffff,
			0xf1d1ffff, 0xffffffff, 0xe3c3ffff, 0x0, 0x0, 0x0,
			0x88a8f8, 0x0, 0x0, 0xffffffff, 0x3f1fffff, 0xfffffcfc,
			0xffefffff, 0xfffff8f8, 0xffefffff, 0xfffff1f1,
			0xffefffff, 0xffffe3e3, 0xffefffff, 0xffffc7c7,
			0xffefffff, 0xffff8f8f, 0xffefffff, 0xffff1f1f,
			0xffefffff, 0xffff3f3f, 0xffefffff, 0xfffcfcfc,
			0xffefffff, 0xfff8f8f8, 0xffefffff, 0xfff1f1f1,
			0xffefffff, 0xffe3e3e3, 0xffefffff, 0xffc7c7c7,
			0xffefffff, 0xff8f8f8f, 0xffefffff, 0xff1f1f1f,
			0xffefffff, 0xff3f3f3f, 0xffefffff, 0xfcfcfcff,
			0xffefffff, 0xf8f8f8ff, 0xffefffff, 0xf1f1f1ff,
			0xffefffff, 0xe3e3e3ff, 0xffefffff, 0xc7c7c7ff,
			0xffefffff, 0x8f8f8fff, 0xffefffff, 0x1f1f1fff,
			0xffefffff, 0x3f3f3fff, 0xffefffff, 0xfcfcffff,
			0xffeffffc, 0xf8f8ffff, 0xffeffff8, 0xf1f1ffff,
			0xffeffff1, 0xe3e3ffff, 0xffefffe3, 0xc7c7ffff,
			0xffefffc7, 0x8f8fffff, 0xffefff8f, 0x1f1fffff,
			0xffefff1f, 0x3f3fffff, 0xffefff3f, 0xfcffffff,
			0xffeffcfc, 0xf8ffffff, 0xffeff8f8, 0xf1ffffff,
			0xffeff1f1, 0xe3ffffff, 0xffefe3e3, 0xc7ffffff,
			0xffefc7c7, 0x8fffffff, 0xffef8f8f, 0x1fffffff,
			0xffef1f1f, 0x3fffffff, 0xffef3f3f, 0xffffffff,
			0xffecfcfc, 0xffffffff, 0xffe8f8f8, 0x0, 0x7c607000, 0x0,
			0x38202000, 0x0, 0x38000000, 0x0, 0x38080800, 0x0,
			0x7c0c1c00, 0xffffffff, 0xff2f3f3f, 0xffffffff,
			0xfcecfcff, 0xffffffff, 0xf8e8f8ff, 0x0, 0x70607000, 0x0,
			0x20200000, 0x0, 0x0, 0x0, 0x8080000, 0x0, 0x1c0c1c00,
			0xffffffff, 0x3f2f3fff, 0xffffffff, 0xfcecffff,
			0xffffffff, 0xf8e8ffff, 0x0, 0x70607c00, 0x0, 0x20201000,
			0x0, 0x2800, 0x0, 0x8081000, 0x0, 0x1c0c7c00, 0xffffffff,
			0x3f2fffff, 0xfffffcfc, 0xffefffff, 0xfffff8f8,
			0xffefffff, 0xfffff1f1, 0xffefffff, 0xffffe3e3,
			0xffefffff, 0xffffc7c7, 0xffefffff, 0xffff8f8f,
			0xffefffff, 0xffff1f1f, 0xffefffff, 0xffff3f3f,
			0xffefffff, 0xfffcfcfc, 0xffefffff, 0xfff8f8f8,
			0xffefffff, 0xfff1f1f1, 0xffefffff, 0xffe3e3e3,
			0xffefffff, 0xffc7c7c7, 0xffefffff, 0xff8f8f8f,
			0xffefffff, 0xff1f1f1f, 0xffefffff, 0xff3f3f3f,
			0xffefffff, 0xfcfcfcff, 0xffefffff, 0xf8f8f8ff,
			0xffefffff, 0xf1f1f1ff, 0xffefffff, 0xe3e3e3ff,
			0xffefffff, 0xc7c7c7ff, 0xffefffff, 0x8f8f8fff,
			0xffefffff, 0x1f1f1fff, 0xffefffff, 0x3f3f3fff,
			0xffefffff, 0xfcfcffff, 0xffeffffc, 0xf8f8ffff,
			0xffeffff8, 0xf1f1ffff, 0xffeffff1, 0xe3e3ffff,
			0xffefffe3, 0xc7c7ffff, 0xffefffc7, 0x8f8fffff,
			0xffefff8f, 0x1f1fffff, 0xffefff1f, 0x3f3fffff,
			0xffefff3f, 0xfcffffff, 0xffeffcfc, 0xf8ffffff,
			0xffeff8f8, 0xf1ffffff, 0xffeff1f1, 0xe3ffffff,
			0xffefe3e3, 0xc7ffffff, 0xffefc7c7, 0x8fffffff,
			0xffef8f8f, 0x1fffffff, 0xffef1f1f, 0x3fffffff,
			0xffef3f3f, 0xffffffff, 0xffecfcfc, 0xffffffff,
			0xffe8f8f8, 0xffffffff, 0xffe1f1f1, 0xffffffff,
			0xffe3e3e3, 0xffffffff, 0xffc7c7c7, 0xffffffff,
			0xff8f8f8f, 0xffffffff, 0xff0f1f1f, 0xffffffff,
			0xff2f3f3f, 0xffffffff, 0xfcecfcff, 0xffffffff,
			0xf8e8f8ff, 0xffffffff, 0xf1e1f1ff, 0x0, 0x60606000, 0x0,
			0x0, 0x0, 0xc0c0c00, 0xffffffff, 0x1f0f1fff, 0xffffffff,
			0x3f2f3fff, 0xffffffff, 0xfcecffff, 0xffffffff,
			0xf8e8ffff, 0xffffffff, 0xf1e1ffff, 0x0, 0x0, 0x0,
			0x44547c, 0x0, 0x0, 0xffffffff, 0x1f0fffff, 0xffffffff,
			0x3f2fffff, 0xfffffcfc, 0xffff7fff, 0xfffff8f8,
			0xffff7fff, 0xfffff1f1, 0xffff7fff, 0xffffe3e3,
			0xffff7fff, 0xffffc7c7, 0xffff7fff, 0xffff8f8f,
			0xffff7fff, 0xffff1f1f, 0xffff7fff, 0xffff3f3f,
			0xffff7fff, 0xfffcfcfc, 0xffff7fff, 0xfff8f8f8,
			0xffff7fff, 0xfff1f1f1, 0xffff7fff, 0xffe3e3e3,
			0xffff7fff, 0xffc7c7c7, 0xffff7fff, 0xff8f8f8f,
			0xffff7fff, 0xff1f1f1f, 0xffff7fff, 0xff3f3f3f,
			0xffff7fff, 0xfcfcfcff, 0xffff7fff, 0xf8f8f8ff,
			0xffff7fff, 0xf1f1f1ff, 0xffff7fff, 0xe3e3e3ff,
			0xffff7fff, 0xc7c7c7ff, 0xffff7fff, 0x8f8f8fff,
			0xffff7fff, 0x1f1f1fff, 0xffff7fff, 0x3f3f3fff,
			0xffff7fff, 0xfcfcffff, 0xffff7ffc, 0xf8f8ffff,
			0xffff7ff8, 0xf1f1ffff, 0xffff7ff1, 0xe3e3ffff,
			0xffff7fe3, 0xc7c7ffff, 0xffff7fc7, 0x8f8fffff,
			0xffff7f8f, 0x1f1fffff, 0xffff7f1f, 0x3f3fffff,
			0xffff7f3f, 0xfcffffff, 0xffff7cfc, 0xf8ffffff,
			0xffff78f8, 0xf1ffffff, 0xffff71f1, 0xe3ffffff,
			0xffff63e3, 0x0, 0xe0f04040, 0x0, 0x40e00000, 0x0,
			0xc00000, 0x0, 0xc00000, 0xffffffff, 0xfffc7cfc,
			0xffffffff, 0xfff878f8, 0xffffffff, 0xfff171f1,
			0xffffffff, 0xffe363e3, 0x0, 0x60404000, 0x0, 0x40000000,
			0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xfcfc7cff, 0xffffffff,
			0xf8f878ff, 0xffffffff, 0xf1f171ff, 0xffffffff,
			0xe3e363ff, 0x0, 0x40404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfcfc7fff, 0xffffffff, 0xf8f87fff,
			0xffffffff, 0xf1f17fff, 0xffffffff, 0xe3e37fff, 0x0,
			0x40406000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xfffffcfc,
			0xffff7fff, 0xfffff8f8, 0xffff7fff, 0xfffff1f1,
			0xffff7fff, 0xffffe3e3, 0xffff7fff, 0xffffc7c7,
			0xffff7fff, 0xffff8f8f, 0xffff7fff, 0xffff1f1f,
			0xffff7fff, 0xffff3f3f, 0xffff7fff, 0xfffcfcfc,
			0xffff7fff, 0xfff8f8f8, 0xffff7fff, 0xfff1f1f1,
			0xffff7fff, 0xffe3e3e3, 0xffff7fff, 0xffc7c7c7,
			0xffff7fff, 0xff8f8f8f, 0xffff7fff, 0xff1f1f1f,
			0xffff7fff, 0xff3f3f3f, 0xffff7fff, 0xfcfcfcff,
			0xffff7fff, 0xf8f8f8ff, 0xffff7fff, 0xf1f1f1ff,
			0xffff7fff, 0xe3e3e3ff, 0xffff7fff, 0xc7c7c7ff,
			0xffff7fff, 0x8f8f8fff, 0xffff7fff, 0x1f1f1fff,
			0xffff7fff, 0x3f3f3fff, 0xffff7fff, 0xfcfcffff,
			0xffff7ffc, 0xf8f8ffff, 0xffff7ff8, 0xf1f1ffff,
			0xffff7ff1, 0xe3e3ffff, 0xffff7fe3, 0xc7c7ffff,
			0xffff7fc7, 0x8f8fffff, 0xffff7f8f, 0x1f1fffff,
			0xffff7f1f, 0x3f3fffff, 0xffff7f3f, 0xfcffffff,
			0xffff7cfc, 0xf8ffffff, 0xffff78f8, 0xf1ffffff,
			0xffff71f1, 0xe3ffffff, 0xffff63e3, 0xc7ffffff,
			0xffff47c7, 0x8fffffff, 0xffff0f8f, 0x1fffffff,
			0xffff1f1f, 0x3fffffff, 0xffff3f3f, 0xffffffff,
			0xfffc7cfc, 0xffffffff, 0xfff878f8, 0xffffffff,
			0xfff171f1, 0xffffffff, 0xffe363e3, 0xffffffff,
			0xffc747c7, 0x0, 0xe0800000, 0x0, 0x40000000, 0x0, 0x0,
			0xffffffff, 0xfcfc7cff, 0xffffffff, 0xf8f878ff,
			0xffffffff, 0xf1f171ff, 0xffffffff, 0xe3e363ff,
			0xffffffff, 0xc7c747ff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfcfc7fff, 0xffffffff, 0xf8f87fff,
			0xffffffff, 0xf1f17fff, 0xffffffff, 0xe3e37fff,
			0xffffffff, 0xc7c77fff, 0x0, 0x6000, 0x0, 0x0, 0x0, 0x0,
			0xfffffcfc, 0xffffbfff, 0xfffff8f8, 0xffffbfff,
			0xfffff1f1, 0xffffbfff, 0xffffe3e3, 0xffffbfff,
			0xffffc7c7, 0xffffbfff, 0xffff8f8f, 0xffffbfff,
			0xffff1f1f, 0xffffbfff, 0xffff3f3f, 0xffffbfff,
			0xfffcfcfc, 0xffffbfff, 0xfff8f8f8, 0xffffbfff,
			0xfff1f1f1, 0xffffbfff, 0xffe3e3e3, 0xffffbfff,
			0xffc7c7c7, 0xffffbfff, 0xff8f8f8f, 0xffffbfff,
			0xff1f1f1f, 0xffffbfff, 0xff3f3f3f, 0xffffbfff,
			0xfcfcfcff, 0xffffbfff, 0xf8f8f8ff, 0xffffbfff,
			0xf1f1f1ff, 0xffffbfff, 0xe3e3e3ff, 0xffffbfff,
			0xc7c7c7ff, 0xffffbfff, 0x8f8f8fff, 0xffffbfff,
			0x1f1f1fff, 0xffffbfff, 0x3f3f3fff, 0xffffbfff,
			0xfcfcffff, 0xffffbffc, 0xf8f8ffff, 0xffffbff8,
			0xf1f1ffff, 0xffffbff1, 0xe3e3ffff, 0xffffbfe3,
			0xc7c7ffff, 0xffffbfc7, 0x8f8fffff, 0xffffbf8f,
			0x1f1fffff, 0xffffbf1f, 0x3f3fffff, 0xffffbf3f,
			0xfcffffff, 0xffffbcfc, 0xf8ffffff, 0xffffb8f8,
			0xf1ffffff, 0xffffb1f1, 0xe0000000, 0xf0f8a0e0, 0x0,
			0xe0f080c0, 0x0, 0xe08080, 0x0, 0xe00000, 0x0, 0xe02020,
			0xffffffff, 0xfffcbcfc, 0xffffffff, 0xfff8b8f8,
			0xffffffff, 0xfff1b1f1, 0xe0000000, 0xf0e0a0e0, 0x0,
			0xe0c080c0, 0x0, 0x808000, 0x0, 0x0, 0x0, 0x202000,
			0xffffffff, 0xfcfcbcff, 0xffffffff, 0xf8f8b8ff,
			0xffffffff, 0xf1f1b1ff, 0xe0000000, 0xe0e0a0f8, 0x0,
			0xc0c080f0, 0x0, 0x808000, 0x0, 0x0, 0x0, 0x200000,
			0xffffffff, 0xfcfcbfff, 0xffffffff, 0xf8f8bfff,
			0xffffffff, 0xf1f1bfff, 0xf8000000, 0xe0e0b8f8, 0x0,
			0xc0c090f0, 0x0, 0x8080a000, 0x0, 0x0, 0x0, 0xa000,
			0xfffffcfc, 0xffffbfff, 0xfffff8f8, 0xffffbfff,
			0xfffff1f1, 0xffffbfff, 0xffffe3e3, 0xffffbfff,
			0xffffc7c7, 0xffffbfff, 0xffff8f8f, 0xffffbfff,
			0xffff1f1f, 0xffffbfff, 0xffff3f3f, 0xffffbfff,
			0xfffcfcfc, 0xffffbfff, 0xfff8f8f8, 0xffffbfff,
			0xfff1f1f1, 0xffffbfff, 0xffe3e3e3, 0xffffbfff,
			0xffc7c7c7, 0xffffbfff, 0xff8f8f8f, 0xffffbfff,
			0xff1f1f1f, 0xffffbfff, 0xff3f3f3f, 0xffffbfff,
			0xfcfcfcff, 0xffffbfff, 0xf8f8f8ff, 0xffffbfff,
			0xf1f1f1ff, 0xffffbfff, 0xe3e3e3ff, 0xffffbfff,
			0xc7c7c7ff, 0xffffbfff, 0x8f8f8fff, 0xffffbfff,
			0x1f1f1fff, 0xffffbfff, 0x3f3f3fff, 0xffffbfff,
			0xfcfcffff, 0xffffbffc, 0xf8f8ffff, 0xffffbff8,
			0xf1f1ffff, 0xffffbff1, 0xe3e3ffff, 0xffffbfe3,
			0xc7c7ffff, 0xffffbfc7, 0x8f8fffff, 0xffffbf8f,
			0x1f1fffff, 0xffffbf1f, 0x3f3fffff, 0xffffbf3f,
			0xfcffffff, 0xffffbcfc, 0xf8ffffff, 0xffffb8f8,
			0xf1ffffff, 0xffffb1f1, 0xe3ffffff, 0xffffa3e3,
			0xc7ffffff, 0xffff87c7, 0x8fffffff, 0xffff8f8f,
			0x1fffffff, 0xffff1f1f, 0x3fffffff, 0xffff3f3f,
			0xffffffff, 0xfffcbcfc, 0xffffffff, 0xfff8b8f8,
			0xffffffff, 0xfff1b1f1, 0xffffffff, 0xffe3a3e3,
			0xe0000000, 0xf0c080c0, 0x0, 0xe0808080, 0x0, 0x0, 0x0,
			0xf0303030, 0xffffffff, 0xfcfcbcff, 0xffffffff,
			0xf8f8b8ff, 0xffffffff, 0xf1f1b1ff, 0xffffffff,
			0xe3e3a3ff, 0xf8000000, 0xc0c080f8, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0xffffffff, 0xfcfcbfff, 0xffffffff, 0xf8f8bfff,
			0xffffffff, 0xf1f1bfff, 0xffffffff, 0xe3e3bfff,
			0xf8000000, 0xc0c0b8f8, 0x0, 0x808090f0, 0x0, 0xa000, 0x0,
			0x203010f0, 0xfffffcfc, 0xffffdfff, 0xfffff8f8,
			0xffffdfff, 0xfffff1f1, 0xffffdfff, 0xffffe3e3,
			0xffffdfff, 0xffffc7c7, 0xffffdfff, 0xffff8f8f,
			0xffffdfff, 0xffff1f1f, 0xffffdfff, 0xffff3f3f,
			0xffffdfff, 0xfffcfcfc, 0xffffdfff, 0xfff8f8f8,
			0xffffdfff, 0xfff1f1f1, 0xffffdfff, 0xffe3e3e3,
			0xffffdfff, 0xffc7c7c7, 0xffffdfff, 0xff8f8f8f,
			0xffffdfff, 0xff1f1f1f, 0xffffdfff, 0xff3f3f3f,
			0xffffdfff, 0xfcfcfcff, 0xffffdfff, 0xf8f8f8ff,
			0xffffdfff, 0xf1f1f1ff, 0xffffdfff, 0xe3e3e3ff,
			0xffffdfff, 0xc7c7c7ff, 0xffffdfff, 0x8f8f8fff,
			0xffffdfff, 0x1f1f1fff, 0xffffdfff, 0x3f3f3fff,
			0xffffdfff, 0xfcfcffff, 0xffffdffc, 0xf8f8ffff,
			0xffffdff8, 0xf1f1ffff, 0xffffdff1, 0xe3e3ffff,
			0xffffdfe3, 0xc7c7ffff, 0xffffdfc7, 0x8f8fffff,
			0xffffdf8f, 0x1f1fffff, 0xffffdf1f, 0x3f3fffff,
			0xffffdf3f, 0xfcffffff, 0xffffdcfc, 0xf8ffffff,
			0xffffd8f8, 0xf0000000, 0xf8fcd0f0, 0x0, 0xf0f8c0e0, 0x0,
			0x704040, 0x0, 0x700000, 0x0, 0x701010, 0x0, 0x78f81838,
			0xffffffff, 0xfffcdcfc, 0xffffffff, 0xfff8d8f8,
			0xf0000000, 0xf8f0d0f0, 0x0, 0xf0e0c0e0, 0x0, 0x404000,
			0x0, 0x0, 0x0, 0x101000, 0x0, 0x78381838, 0xffffffff,
			0xfcfcdcff, 0xffffffff, 0xf8f8d8ff, 0xf0000000,
			0xf0f0d0fc, 0x0, 0xe0e0c0f8, 0x0, 0x404000, 0x0, 0x0, 0x0,
			0x101000, 0x0, 0x383818f8, 0xffffffff, 0xfcfcdfff,
			0xffffffff, 0xf8f8dfff, 0xfc000000, 0xf0f0dcfc, 0x0,
			0xe0e0c8f8, 0x0, 0x40405000, 0x0, 0x0, 0x0, 0x10105000,
			0x0, 0x383898f8, 0xfffffcfc, 0xffffdfff, 0xfffff8f8,
			0xffffdfff, 0xfffff1f1, 0xffffdfff, 0xffffe3e3,
			0xffffdfff, 0xffffc7c7, 0xffffdfff, 0xffff8f8f,
			0xffffdfff, 0xffff1f1f, 0xffffdfff, 0xffff3f3f,
			0xffffdfff, 0xfffcfcfc, 0xffffdfff, 0xfff8f8f8,
			0xffffdfff, 0xfff1f1f1, 0xffffdfff, 0xffe3e3e3,
			0xffffdfff, 0xffc7c7c7, 0xffffdfff, 0xff8f8f8f,
			0xffffdfff, 0xff1f1f1f, 0xffffdfff, 0xff3f3f3f,
			0xffffdfff, 0xfcfcfcff, 0xffffdfff, 0xf8f8f8ff,
			0xffffdfff, 0xf1f1f1ff, 0xffffdfff, 0xe3e3e3ff,
			0xffffdfff, 0xc7c7c7ff, 0xffffdfff, 0x8f8f8fff,
			0xffffdfff, 0x1f1f1fff, 0xffffdfff, 0x3f3f3fff,
			0xffffdfff, 0xfcfcffff, 0xffffdffc, 0xf8f8ffff,
			0xffffdff8, 0xf1f1ffff, 0xffffdff1, 0xe3e3ffff,
			0xffffdfe3, 0xc7c7ffff, 0xffffdfc7, 0x8f8fffff,
			0xffffdf8f, 0x1f1fffff, 0xffffdf1f, 0x3f3fffff,
			0xffffdf3f, 0xfcffffff, 0xffffdcfc, 0xf8ffffff,
			0xffffd8f8, 0xf1ffffff, 0xffffd1f1, 0xe3ffffff,
			0xffffc3e3, 0xc7ffffff, 0xffffc7c7, 0x8fffffff,
			0xffff8f8f, 0x1fffffff, 0xffff1f1f, 0x3fffffff,
			0xffff1f3f, 0xffffffff, 0xfffcdcfc, 0xffffffff,
			0xfff8d8f8, 0xffffffff, 0xfff1d1f1, 0xf0000000,
			0xf8e0c0e0, 0x0, 0xf0c0c0c0, 0x0, 0x0, 0x0, 0x78181818,
			0x7c000000, 0xfc3c1c3c, 0xffffffff, 0xfcfcdcff,
			0xffffffff, 0xf8f8d8ff, 0xffffffff, 0xf1f1d1ff,
			0xfc000000, 0xe0e0c0fc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xfc000000, 0x3c3c1cfc, 0xffffffff, 0xfcfcdfff,
			0xffffffff, 0xf8f8dfff, 0xffffffff, 0xf1f1dfff,
			0xfc000000, 0xe0e0dcfc, 0x0, 0xc0c0c8f8, 0x0, 0x5000, 0x0,
			0x181898f8, 0xfc000000, 0x3c3cdcfc, 0xfffffcfc,
			0xffffefff, 0xfffff8f8, 0xffffefff, 0xfffff1f1,
			0xffffefff, 0xffffe3e3, 0xffffefff, 0xffffc7c7,
			0xffffefff, 0xffff8f8f, 0xffffefff, 0xffff1f1f,
			0xffffefff, 0xffff3f3f, 0xffffefff, 0xfffcfcfc,
			0xffffefff, 0xfff8f8f8, 0xffffefff, 0xfff1f1f1,
			0xffffefff, 0xffe3e3e3, 0xffffefff, 0xffc7c7c7,
			0xffffefff, 0xff8f8f8f, 0xffffefff, 0xff1f1f1f,
			0xffffefff, 0xff3f3f3f, 0xffffefff, 0xfcfcfcff,
			0xffffefff, 0xf8f8f8ff, 0xffffefff, 0xf1f1f1ff,
			0xffffefff, 0xe3e3e3ff, 0xffffefff, 0xc7c7c7ff,
			0xffffefff, 0x8f8f8fff, 0xffffefff, 0x1f1f1fff,
			0xffffefff, 0x3f3f3fff, 0xffffefff, 0xfcfcffff,
			0xffffeffc, 0xf8f8ffff, 0xffffeff8, 0xf1f1ffff,
			0xffffeff1, 0xe3e3ffff, 0xffffefe3, 0xc7c7ffff,
			0xffffefc7, 0x8f8fffff, 0xffffef8f, 0x1f1fffff,
			0xffffef1f, 0x3f3fffff, 0xffffef3f, 0xfcffffff,
			0xffffecfc, 0xf8000000, 0xfcfee8f8, 0x0, 0x787c6070, 0x0,
			0x382020, 0x0, 0x380000, 0x0, 0x380808, 0x0, 0x3c7c0c1c,
			0x3e000000, 0x7efe2e3e, 0xffffffff, 0xfffcecfc,
			0xf8000000, 0xfcf8e8f8, 0x0, 0x78706070, 0x0, 0x202000,
			0x0, 0x0, 0x0, 0x80800, 0x0, 0x3c1c0c1c, 0x3e000000,
			0x7e3e2e3e, 0xffffffff, 0xfcfcecff, 0xf8000000,
			0xf8f8e8fe, 0x0, 0x7070607c, 0x0, 0x202000, 0x0, 0x0, 0x0,
			0x80800, 0x0, 0x1c1c0c7c, 0x3e000000, 0x3e3e2efe,
			0xffffffff, 0xfcfcefff, 0xfe000000, 0xf8f8eefe, 0x0,
			0x7070647c, 0x0, 0x20202800, 0x0, 0x0, 0x0, 0x8082800,
			0x0, 0x1c1c4c7c, 0xfe000000, 0x3e3eeefe, 0xfffffcfc,
			0xffffefff, 0xfffff8f8, 0xffffefff, 0xfffff1f1,
			0xffffefff, 0xffffe3e3, 0xffffefff, 0xffffc7c7,
			0xffffefff, 0xffff8f8f, 0xffffefff, 0xffff1f1f,
			0xffffefff, 0xffff3f3f, 0xffffefff, 0xfffcfcfc,
			0xffffefff, 0xfff8f8f8, 0xffffefff, 0xfff1f1f1,
			0xffffefff, 0xffe3e3e3, 0xffffefff, 0xffc7c7c7,
			0xffffefff, 0xff8f8f8f, 0xffffefff, 0xff1f1f1f,
			0xffffefff, 0xff3f3f3f, 0xffffefff, 0xfcfcfcff,
			0xffffefff, 0xf8f8f8ff, 0xffffefff, 0xf1f1f1ff,
			0xffffefff, 0xe3e3e3ff, 0xffffefff, 0xc7c7c7ff,
			0xffffefff, 0x8f8f8fff, 0xffffefff, 0x1f1f1fff,
			0xffffefff, 0x3f3f3fff, 0xffffefff, 0xfcfcffff,
			0xffffeffc, 0xf8f8ffff, 0xffffeff8, 0xf1f1ffff,
			0xffffeff1, 0xe3e3ffff, 0xffffefe3, 0xc7c7ffff,
			0xffffefc7, 0x8f8fffff, 0xffffef8f, 0x1f1fffff,
			0xffffef1f, 0x3f3fffff, 0xffffef3f, 0xfcffffff,
			0xffffecfc, 0xf8ffffff, 0xffffe8f8, 0xf1ffffff,
			0xffffe1f1, 0xe3ffffff, 0xffffe3e3, 0xc7ffffff,
			0xffffc7c7, 0x8fffffff, 0xffff8f8f, 0x1fffffff,
			0xffff0f1f, 0x3fffffff, 0xffff2f3f, 0xffffffff,
			0xfffcecfc, 0xffffffff, 0xfff8e8f8, 0xf8000000,
			0xfcf0e0f0, 0x0, 0x78606060, 0x0, 0x0, 0x0, 0x3c0c0c0c,
			0x3e000000, 0x7e1e0e1e, 0xffffffff, 0xff3f2f3f,
			0xffffffff, 0xfcfcecff, 0xffffffff, 0xf8f8e8ff,
			0xfe000000, 0xf0f0e0fe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xfe000000, 0x1e1e0efe, 0xffffffff, 0x3f3f2fff,
			0xffffffff, 0xfcfcefff, 0xffffffff, 0xf8f8efff,
			0xfe000000, 0xf0f0eefe, 0x0, 0x6060647c, 0x0, 0x2800, 0x0,
			0xc0c4c7c, 0xfe000000, 0x1e1eeefe, 0xffffffff, 0x3f3fefff,
			0xfffffcfc, 0xffffff7f, 0xfffff8f8, 0xffffff7f,
			0xfffff1f1, 0xffffff7f, 0xffffe3e3, 0xffffff7f,
			0xffffc7c7, 0xffffff7f, 0xffff8f8f, 0xffffff7f,
			0xffff1f1f, 0xffffff7f, 0xffff3f3f, 0xffffff7f,
			0xfffcfcfc, 0xffffff7f, 0xfff8f8f8, 0xffffff7f,
			0xfff1f1f1, 0xffffff7f, 0xffe3e3e3, 0xffffff7f,
			0xffc7c7c7, 0xffffff7f, 0xff8f8f8f, 0xffffff7f,
			0xff1f1f1f, 0xffffff7f, 0xff3f3f3f, 0xffffff7f,
			0xfcfcfcff, 0xffffff7f, 0xf8f8f8ff, 0xffffff7f,
			0xf1f1f1ff, 0xffffff7f, 0xe3e3e3ff, 0xffffff7f,
			0xc7c7c7ff, 0xffffff7f, 0x8f8f8fff, 0xffffff7f,
			0x1f1f1fff, 0xffffff7f, 0x3f3f3fff, 0xffffff7f,
			0xfcfcffff, 0xffffff7c, 0xf8f8ffff, 0xffffff78,
			0xf1f1ffff, 0xffffff71, 0xe0000000, 0xf0f0f860,
			0x40000000, 0xe0e0f040, 0x0, 0xc0e000, 0x0, 0xc000, 0x0,
			0xc000, 0xfcffffff, 0xfffffc7c, 0xf8ffffff, 0xfffff878,
			0xf1ffffff, 0xfffff171, 0x0, 0xe0f0e060, 0x0, 0x40604040,
			0x0, 0x400000, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xfffcfc7c,
			0xffffffff, 0xfff8f878, 0xffffffff, 0xfff1f171, 0x0,
			0xe0e0e000, 0x0, 0x40404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfcfcfc7f, 0xffffffff, 0xf8f8f87f,
			0xffffffff, 0xf1f1f17f, 0x0, 0xe0e0e000, 0x0, 0x40400000,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xfcfcff7f,
			0xffffffff, 0xf8f8ff7f, 0xffffffff, 0xf1f1ff7f, 0x0,
			0xe0e0e000, 0x0, 0x40400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xfffffcfc, 0xffffff7f, 0xfffff8f8, 0xffffff7f,
			0xfffff1f1, 0xffffff7f, 0xffffe3e3, 0xffffff7f,
			0xffffc7c7, 0xffffff7f, 0xffff8f8f, 0xffffff7f,
			0xffff1f1f, 0xffffff7f, 0xffff3f3f, 0xffffff7f,
			0xfffcfcfc, 0xffffff7f, 0xfff8f8f8, 0xffffff7f,
			0xfff1f1f1, 0xffffff7f, 0xffe3e3e3, 0xffffff7f,
			0xffc7c7c7, 0xffffff7f, 0xff8f8f8f, 0xffffff7f,
			0xff1f1f1f, 0xffffff7f, 0xff3f3f3f, 0xffffff7f,
			0xfcfcfcff, 0xffffff7f, 0xf8f8f8ff, 0xffffff7f,
			0xf1f1f1ff, 0xffffff7f, 0xe3e3e3ff, 0xffffff7f,
			0xc7c7c7ff, 0xffffff7f, 0x8f8f8fff, 0xffffff7f,
			0x1f1f1fff, 0xffffff7f, 0x3f3f3fff, 0xffffff7f,
			0xfcfcffff, 0xffffff7c, 0xf8f8ffff, 0xffffff78,
			0xf1f1ffff, 0xffffff71, 0xe3e3ffff, 0xffffff63,
			0xc7c7ffff, 0xffffff47, 0x8f8fffff, 0xffffff0f,
			0x1f1fffff, 0xffffff1f, 0x3f3fffff, 0xffffff3f,
			0xfcffffff, 0xfffffc7c, 0xf8ffffff, 0xfffff878,
			0xf1ffffff, 0xfffff171, 0xe3ffffff, 0xffffe363,
			0xc0000000, 0xf0f0c040, 0x0, 0xe0e08000, 0x0, 0xc00000,
			0x0, 0x0, 0xffffffff, 0xfffcfc7c, 0xffffffff, 0xfff8f878,
			0xffffffff, 0xfff1f171, 0xffffffff, 0xffe3e363, 0x0,
			0xe0c0c040, 0x0, 0x40000000, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfcfcfc7f, 0xffffffff, 0xf8f8f87f,
			0xffffffff, 0xf1f1f17f, 0xffffffff, 0xe3e3e37f, 0x0,
			0xc0c0c000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff,
			0xfcfcff7f, 0xffffffff, 0xf8f8ff7f, 0xffffffff,
			0xf1f1ff7f, 0xffffffff, 0xe3e3ff7f, 0x0, 0xc0c0e000, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0xfffffcfc, 0xffffffbf,
			0xfffff8f8, 0xffffffbf, 0xfffff1f1, 0xffffffbf,
			0xffffe3e3, 0xffffffbf, 0xffffc7c7, 0xffffffbf,
			0xffff8f8f, 0xffffffbf, 0xffff1f1f, 0xffffffbf,
			0xffff3f3f, 0xffffffbf, 0xfffcfcfc, 0xffffffbf,
			0xfff8f8f8, 0xffffffbf, 0xfff1f1f1, 0xffffffbf,
			0xffe3e3e3, 0xffffffbf, 0xffc7c7c7, 0xffffffbf,
			0xff8f8f8f, 0xffffffbf, 0xff1f1f1f, 0xffffffbf,
			0xff3f3f3f, 0xffffffbf, 0xfcfcfcff, 0xffffffbf,
			0xf8f8f8ff, 0xffffffbf, 0xf1f1f1ff, 0xffffffbf,
			0xe3e3e3ff, 0xffffffbf, 0xc7c7c7ff, 0xffffffbf,
			0x8f8f8fff, 0xffffffbf, 0x1f1f1fff, 0xffffffbf,
			0x3f3f3fff, 0xffffffbf, 0xfcfcffff, 0xffffffbc,
			0xf8f8ffff, 0xffffffb8, 0xf0e00000, 0xf8f8fcb0,
			0xe0e00000, 0xf0f0f8a0, 0xc0000000, 0xe0f080, 0x80000000,
			0xe080, 0x0, 0xe000, 0x20000000, 0xe020, 0xfcffffff,
			0xfffffcbc, 0xf8ffffff, 0xfffff8b8, 0xf0e00000,
			0xf0f8f0b0, 0xc0000000, 0xe0f0e0a0, 0xc0000000, 0xe0c080,
			0x0, 0x8080, 0x0, 0x0, 0x0, 0x2020, 0xffffffff,
			0xfffcfcbc, 0xffffffff, 0xfff8f8b8, 0xf0e00000,
			0xf0f0f0b0, 0xc0000000, 0xe0e0e0a0, 0x0, 0xc0c080, 0x0,
			0x8000, 0x0, 0x0, 0x0, 0x2000, 0xffffffff, 0xfcfcfcbf,
			0xffffffff, 0xf8f8f8bf, 0xf0e00000, 0xf0f0f0b8,
			0xc0000000, 0xe0e0e0b0, 0x0, 0xc0c0c080, 0x0, 0x808000,
			0x0, 0x0, 0x0, 0x202000, 0xffffffff, 0xfcfcffbf,
			0xffffffff, 0xf8f8ffbf, 0xf8e00000, 0xf0f0fcb8,
			0xc0000000, 0xe0e0f8b0, 0x0, 0xc0c0f080, 0x0, 0x8080e000,
			0x0, 0xe000, 0x0, 0x2020e000, 0xfffffcfc, 0xffffffbf,
			0xfffff8f8, 0xffffffbf, 0xfffff1f1, 0xffffffbf,
			0xffffe3e3, 0xffffffbf, 0xffffc7c7, 0xffffffbf,
			0xffff8f8f, 0xffffffbf, 0xffff1f1f, 0xffffffbf,
			0xffff3f3f, 0xffffffbf, 0xfffcfcfc, 0xffffffbf,
			0xfff8f8f8, 0xffffffbf, 0xfff1f1f1, 0xffffffbf,
			0xffe3e3e3, 0xffffffbf, 0xffc7c7c7, 0xffffffbf,
			0xff8f8f8f, 0xffffffbf, 0xff1f1f1f, 0xffffffbf,
			0xff3f3f3f, 0xffffffbf, 0xfcfcfcff, 0xffffffbf,
			0xf8f8f8ff, 0xffffffbf, 0xf1f1f1ff, 0xffffffbf,
			0xe3e3e3ff, 0xffffffbf, 0xc7c7c7ff, 0xffffffbf,
			0x8f8f8fff, 0xffffffbf, 0x1f1f1fff, 0xffffffbf,
			0x3f3f3fff, 0xffffffbf, 0xfcfcffff, 0xffffffbc,
			0xf8f8ffff, 0xffffffb8, 0xf1f1ffff, 0xffffffb1,
			0xe3e3ffff, 0xffffffa3, 0xc7c7ffff, 0xffffff87,
			0x8f8fffff, 0xffffff8f, 0x1f1fffff, 0xffffff1f,
			0x3f3fffff, 0xffffff3f, 0xfcffffff, 0xfffffcbc,
			0xf8ffffff, 0xfffff8b8, 0xf1ffffff, 0xfffff1b1,
			0xe0e00000, 0xf8f8e0a0, 0xc0e00000, 0xf0f0c080,
			0x80000000, 0xe08080, 0x0, 0x0, 0x30000000, 0xf03030,
			0xffffffff, 0xfffcfcbc, 0xffffffff, 0xfff8f8b8,
			0xffffffff, 0xfff1f1b1, 0xf0e00000, 0xf0e0e0a0,
			0xc0000000, 0xe0c0c080, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xffffffff, 0xfcfcfcbf, 0xffffffff, 0xf8f8f8bf,
			0xffffffff, 0xf1f1f1bf, 0xf8e00000, 0xe0e0e0b8,
			0xc0000000, 0xc0c0c0b0, 0x0, 0x80808080, 0x0, 0x0, 0x0,
			0x30303030, 0xffffffff, 0xfcfcffbf, 0xffffffff,
			0xf8f8ffbf, 0xffffffff, 0xf1f1ffbf, 0xf8e00000,
			0xe0e0fcbc, 0xc0000000, 0xc0c0f8b8, 0x0, 0x8080f0b0, 0x0,
			0x10f0b0, 0x0, 0x3030f0b0, 0xfffffcfc, 0xffffffdf,
			0xfffff8f8, 0xffffffdf, 0xfffff1f1, 0xffffffdf,
			0xffffe3e3, 0xffffffdf, 0xffffc7c7, 0xffffffdf,
			0xffff8f8f, 0xffffffdf, 0xffff1f1f, 0xffffffdf,
			0xffff3f3f, 0xffffffdf, 0xfffcfcfc, 0xffffffdf,
			0xfff8f8f8, 0xffffffdf, 0xfff1f1f1, 0xffffffdf,
			0xffe3e3e3, 0xffffffdf, 0xffc7c7c7, 0xffffffdf,
			0xff8f8f8f, 0xffffffdf, 0xff1f1f1f, 0xffffffdf,
			0xff3f3f3f, 0xffffffdf, 0xfcfcfcff, 0xffffffdf,
			0xf8f8f8ff, 0xffffffdf, 0xf1f1f1ff, 0xffffffdf,
			0xe3e3e3ff, 0xffffffdf, 0xc7c7c7ff, 0xffffffdf,
			0x8f8f8fff, 0xffffffdf, 0x1f1f1fff, 0xffffffdf,
			0x3f3f3fff, 0xffffffdf, 0xfcfcffff, 0xffffffdc,
			0xf8f00000, 0xfcfcfed8, 0xf0f00000, 0xf8f8fcd0,
			0xe0000000, 0xf0f8c0, 0x40000000, 0x7040, 0x0, 0x7000,
			0x10000000, 0x7010, 0x38000000, 0x78f818, 0xfcffffff,
			0xfffffcdc, 0xf8f00000, 0xf8fcf8d8, 0xe0000000,
			0xf0f8f0d0, 0xe0000000, 0xf0e0c0, 0x0, 0x4040, 0x0, 0x0,
			0x0, 0x1010, 0x38000000, 0x783818, 0xffffffff, 0xfffcfcdc,
			0xf8f00000, 0xf8f8f8d8, 0xe0000000, 0xf0f0f0d0, 0x0,
			0xe0e0c0, 0x0, 0x4000, 0x0, 0x0, 0x0, 0x1000, 0x0,
			0x383818, 0xffffffff, 0xfcfcfcdf, 0xf8f00000, 0xf8f8f8dc,
			0xe0000000, 0xf0f0f0d8, 0x0, 0xe0e0e0c0, 0x0, 0x404000,
			0x0, 0x0, 0x0, 0x101000, 0x0, 0x38383818, 0xffffffff,
			0xfcfcffdf, 0xfcf00000, 0xf8f8fedc, 0xe0000000,
			0xf0f0fcd8, 0x0, 0xe0e0f8c0, 0x0, 0x40407000, 0x0, 0x7000,
			0x0, 0x10107000, 0x0, 0x3838f818, 0xfffffcfc, 0xffffffdf,
			0xfffff8f8, 0xffffffdf, 0xfffff1f1, 0xffffffdf,
			0xffffe3e3, 0xffffffdf, 0xffffc7c7, 0xffffffdf,
			0xffff8f8f, 0xffffffdf, 0xffff1f1f, 0xffffffdf,
			0xffff3f3f, 0xffffffdf, 0xfffcfcfc, 0xffffffdf,
			0xfff8f8f8, 0xffffffdf, 0xfff1f1f1, 0xffffffdf,
			0xffe3e3e3, 0xffffffdf, 0xffc7c7c7, 0xffffffdf,
			0xff8f8f8f, 0xffffffdf, 0xff1f1f1f, 0xffffffdf,
			0xff3f3f3f, 0xffffffdf, 0xfcfcfcff, 0xffffffdf,
			0xf8f8f8ff, 0xffffffdf, 0xf1f1f1ff, 0xffffffdf,
			0xe3e3e3ff, 0xffffffdf, 0xc7c7c7ff, 0xffffffdf,
			0x8f8f8fff, 0xffffffdf, 0x1f1f1fff, 0xffffffdf,
			0x3f3f3fff, 0xffffffdf, 0xfcfcffff, 0xffffffdc,
			0xf8f8ffff, 0xffffffd8, 0xf1f1ffff, 0xffffffd1,
			0xe3e3ffff, 0xffffffc3, 0xc7c7ffff, 0xffffffc7,
			0x8f8fffff, 0xffffff8f, 0x1f1fffff, 0xffffff1f,
			0x3f3fffff, 0xffffff1f, 0xfcffffff, 0xfffffcdc,
			0xf8ffffff, 0xfffff8d8, 0xf0f00000, 0xfcfcf0d0,
			0xe0f00000, 0xf8f8e0c0, 0xc0000000, 0xf0c0c0, 0x0, 0x0,
			0x18000000, 0x781818, 0x3c7c0000, 0xfcfc3c1c, 0xffffffff,
			0xfffcfcdc, 0xffffffff, 0xfff8f8d8, 0xf8f00000,
			0xf8f0f0d0, 0xe0000000, 0xf0e0e0c0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x3c000000, 0x7c3c3c1c, 0xffffffff, 0xfcfcfcdf,
			0xffffffff, 0xf8f8f8df, 0xfcf00000, 0xf0f0f0dc,
			0xe0000000, 0xe0e0e0d8, 0x0, 0xc0c0c0c0, 0x0, 0x0, 0x0,
			0x18181818, 0x3c000000, 0x3c3c3cdc, 0xffffffff,
			0xfcfcffdf, 0xffffffff, 0xf8f8ffdf, 0xfcf00000,
			0xf0f0fede, 0xe0000000, 0xe0e0fcdc, 0x0, 0xc0c0f8d8, 0x0,
			0x88f8d8, 0x0, 0x1818f8d8, 0x3c000000, 0x3c3cfcdc,
			0xfffffcfc, 0xffffffef, 0xfffff8f8, 0xffffffef,
			0xfffff1f1, 0xffffffef, 0xffffe3e3, 0xffffffef,
			0xffffc7c7, 0xffffffef, 0xffff8f8f, 0xffffffef,
			0xffff1f1f, 0xffffffef, 0xffff3f3f, 0xffffffef,
			0xfffcfcfc, 0xffffffef, 0xfff8f8f8, 0xffffffef,
			0xfff1f1f1, 0xffffffef, 0xffe3e3e3, 0xffffffef,
			0xffc7c7c7, 0xffffffef, 0xff8f8f8f, 0xffffffef,
			0xff1f1f1f, 0xffffffef, 0xff3f3f3f, 0xffffffef,
			0xfcfcfcff, 0xffffffef, 0xf8f8f8ff, 0xffffffef,
			0xf1f1f1ff, 0xffffffef, 0xe3e3e3ff, 0xffffffef,
			0xc7c7c7ff, 0xffffffef, 0x8f8f8fff, 0xffffffef,
			0x1f1f1fff, 0xffffffef, 0x3f3f3fff, 0xffffffef,
			0xfcf80000, 0xfefeffec, 0xf8f80000, 0xfcfcfee8,
			0x70000000, 0x787c60, 0x20000000, 0x3820, 0x0, 0x3800,
			0x8000000, 0x3808, 0x1c000000, 0x3c7c0c, 0x3e3e0000,
			0x7e7efe2e, 0xfcf80000, 0xfcfefcec, 0xf0000000,
			0xf8fcf8e8, 0x70000000, 0x787060, 0x0, 0x2020, 0x0, 0x0,
			0x0, 0x808, 0x1c000000, 0x3c1c0c, 0x1e000000, 0x3e7e3e2e,
			0xfcf80000, 0xfcfcfcec, 0xf0000000, 0xf8f8f8e8, 0x0,
			0x707060, 0x0, 0x2000, 0x0, 0x0, 0x0, 0x800, 0x0,
			0x1c1c0c, 0x1e000000, 0x3e3e3e2e, 0xfcf80000, 0xfcfcfcee,
			0xf0000000, 0xf8f8f8ec, 0x0, 0x70707060, 0x0, 0x202000,
			0x0, 0x0, 0x0, 0x80800, 0x0, 0x1c1c1c0c, 0x1e000000,
			0x3e3e3e6e, 0xfef80000, 0xfcfcffee, 0xf0000000,
			0xf8f8feec, 0x0, 0x70707c60, 0x0, 0x20203800, 0x0, 0x3800,
			0x0, 0x8083800, 0x0, 0x1c1c7c0c, 0x1e000000, 0x3e3efe6e,
			0xfffffcfc, 0xffffffef, 0xfffff8f8, 0xffffffef,
			0xfffff1f1, 0xffffffef, 0xffffe3e3, 0xffffffef,
			0xffffc7c7, 0xffffffef, 0xffff8f8f, 0xffffffef,
			0xffff1f1f, 0xffffffef, 0xffff3f3f, 0xffffffef,
			0xfffcfcfc, 0xffffffef, 0xfff8f8f8, 0xffffffef,
			0xfff1f1f1, 0xffffffef, 0xffe3e3e3, 0xffffffef,
			0xffc7c7c7, 0xffffffef, 0xff8f8f8f, 0xffffffef,
			0xff1f1f1f, 0xffffffef, 0xff3f3f3f, 0xffffffef,
			0xfcfcfcff, 0xffffffef, 0xf8f8f8ff, 0xffffffef,
			0xf1f1f1ff, 0xffffffef, 0xe3e3e3ff, 0xffffffef,
			0xc7c7c7ff, 0xffffffef, 0x8f8f8fff, 0xffffffef,
			0x1f1f1fff, 0xffffffef, 0x3f3f3fff, 0xffffffef,
			0xfcfcffff, 0xffffffec, 0xf8f8ffff, 0xffffffe8,
			0xf1f1ffff, 0xffffffe1, 0xe3e3ffff, 0xffffffe3,
			0xc7c7ffff, 0xffffffc7, 0x8f8fffff, 0xffffff8f,
			0x1f1fffff, 0xffffff0f, 0x3f3fffff, 0xffffff2f,
			0xfcffffff, 0xfffffcec, 0xf8f80000, 0xfefef8e8,
			0xf0f80000, 0xfcfcf0e0, 0x60000000, 0x786060, 0x0, 0x0,
			0xc000000, 0x3c0c0c, 0x1e3e0000, 0x7e7e1e0e, 0x3f3f0000,
			0xffff3f2f, 0xffffffff, 0xfffcfcec, 0xfcf80000,
			0xfcf8f8e8, 0xf0000000, 0xf8f0f0e0, 0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x1e000000, 0x3e1e1e0e, 0x7f3f0000, 0x7f3f3f2f,
			0xffffffff, 0xfcfcfcef, 0xfef80000, 0xf8f8f8ee,
			0xf0000000, 0xf0f0f0ec, 0x0, 0x60606060, 0x0, 0x0, 0x0,
			0xc0c0c0c, 0x1e000000, 0x1e1e1e6e, 0xff3f0000, 0x3f3f3fef,
			0xffffffff, 0xfcfcffef, 0xfef80000, 0xf8f8ffef,
			0xf0000000, 0xf0f0feee, 0x0, 0x60607c6c, 0x0, 0x447c6c,
			0x0, 0xc0c7c6c, 0x1e000000, 0x1e1efeee, 0xff3f0000,
			0x3f3fffef, 0x7ffffcfc, 0xffffffff, 0x7ffff8f8,
			0xffffffff, 0x7ffff1f1, 0xffffffff, 0x7fffe3e3,
			0xffffffff, 0x7fffc7c7, 0xffffffff, 0x7fff8f8f,
			0xffffffff, 0x7fff1f1f, 0xffffffff, 0x7fff3f3f,
			0xffffffff, 0x7ffcfcfc, 0xffffffff, 0x7ff8f8f8,
			0xffffffff, 0x7ff1f1f1, 0xffffffff, 0x7fe3e3e3,
			0xffffffff, 0x7fc7c7c7, 0xffffffff, 0x7f8f8f8f,
			0xffffffff, 0x7f1f1f1f, 0xffffffff, 0x7f3f3f3f,
			0xffffffff, 0x7cfcfcff, 0xffffffff, 0x78f8f8ff,
			0xffffffff, 0x70f00000, 0xf0f8f8fc, 0x60e00000,
			0xe0f0f0f8, 0x40400000, 0xe0e0f0, 0x0, 0xc0e0, 0x0, 0xc0,
			0x0, 0xc0, 0x7cfcffff, 0xfffffffc, 0x78f8ffff, 0xfffffff8,
			0x70000000, 0xf0f0f8f0, 0x60000000, 0xe0e0f0e0,
			0x40000000, 0x406040, 0x0, 0x4000, 0x0, 0x0, 0x0, 0x0,
			0x7cffffff, 0xfffffcfc, 0x78ffffff, 0xfffff8f8, 0x0,
			0xf0f0f0f0, 0x0, 0xe0e0e0e0, 0x0, 0x404040, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x7fffffff, 0xfffcfcfc, 0x7fffffff,
			0xfff8f8f8, 0x0, 0xf0f0f0f0, 0x0, 0xe0e0e000, 0x0,
			0x404000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fffffff,
			0xfcfcfcff, 0x7fffffff, 0xf8f8f8ff, 0x0, 0xf0f0f0f0, 0x0,
			0xe0e0e000, 0x0, 0x400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x7fffffff, 0xfcfcffff, 0x7fffffff, 0xf8f8ffff, 0x0,
			0xf0f0f0f0, 0x0, 0xe0e0e000, 0x0, 0x40400000, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x7ffffcfc, 0xffffffff, 0x7ffff8f8,
			0xffffffff, 0x7ffff1f1, 0xffffffff, 0x7fffe3e3,
			0xffffffff, 0x7fffc7c7, 0xffffffff, 0x7fff8f8f,
			0xffffffff, 0x7fff1f1f, 0xffffffff, 0x7fff3f3f,
			0xffffffff, 0x7ffcfcfc, 0xffffffff, 0x7ff8f8f8,
			0xffffffff, 0x7ff1f1f1, 0xffffffff, 0x7fe3e3e3,
			0xffffffff, 0x7fc7c7c7, 0xffffffff, 0x7f8f8f8f,
			0xffffffff, 0x7f1f1f1f, 0xffffffff, 0x7f3f3f3f,
			0xffffffff, 0x7cfcfcff, 0xffffffff, 0x78f8f8ff,
			0xffffffff, 0x71f1f1ff, 0xffffffff, 0x63e3e3ff,
			0xffffffff, 0x47c7c7ff, 0xffffffff, 0xf8f8fff, 0xffffffff,
			0x1f1f1fff, 0xffffffff, 0x3f3f3fff, 0xffffffff,
			0x7cfcffff, 0xfffffffc, 0x78f8ffff, 0xfffffff8,
			0x71f1ffff, 0xfffffff1, 0x60e00000, 0xf0f8f8e0,
			0x40c00000, 0xe0f0f0c0, 0x0, 0xe0e080, 0x0, 0xc000, 0x0,
			0x0, 0x7cffffff, 0xfffffcfc, 0x78ffffff, 0xfffff8f8,
			0x71ffffff, 0xfffff1f1, 0x60000000, 0xf0f0e0e0,
			0x40000000, 0xe0e0c0c0, 0x0, 0x400000, 0x0, 0x0, 0x0, 0x0,
			0x7fffffff, 0xfffcfcfc, 0x7fffffff, 0xfff8f8f8,
			0x7fffffff, 0xfff1f1f1, 0x0, 0xf0e0e0e0, 0x0, 0xe0c0c0c0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7fffffff, 0xfcfcfcff,
			0x7fffffff, 0xf8f8f8ff, 0x7fffffff, 0xf1f1f1ff, 0x0,
			0xe0e0e0f0, 0x0, 0xc0c0c000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x7fffffff, 0xfcfcffff, 0x7fffffff, 0xf8f8ffff,
			0x7fffffff, 0xf1f1ffff, 0x0, 0xe0e0f0f0, 0x0, 0xc0c0e000,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xbffffcfc, 0xffffffff,
			0xbffff8f8, 0xffffffff, 0xbffff1f1, 0xffffffff,
			0xbfffe3e3, 0xffffffff, 0xbfffc7c7, 0xffffffff,
			0xbfff8f8f, 0xffffffff, 0xbfff1f1f, 0xffffffff,
			0xbfff3f3f, 0xffffffff, 0xbffcfcfc, 0xffffffff,
			0xbff8f8f8, 0xffffffff, 0xbff1f1f1, 0xffffffff,
			0xbfe3e3e3, 0xffffffff, 0xbfc7c7c7, 0xffffffff,
			0xbf8f8f8f, 0xffffffff, 0xbf1f1f1f, 0xffffffff,
			0xbf3f3f3f, 0xffffffff, 0xbcfcfcff, 0xffffffff,
			0xb8f8f8f0, 0xf8fcfcfe, 0xb0f0e000, 0xf0f8f8fc,
			0xa0e0e000, 0xf0f0f8, 0x80c00000, 0xe0f0, 0x80800000,
			0xe0, 0x0, 0xe0, 0x20200000, 0xe0, 0xbcfcffff, 0xfffffffc,
			0xb8f8f8f0, 0xf8f8fcf8, 0xb0f0e000, 0xf0f0f8f0,
			0xa0c00000, 0xe0f0e0, 0x80c00000, 0xe0c0, 0x80000000,
			0x80, 0x0, 0x0, 0x20000000, 0x20, 0xbcffffff, 0xfffffcfc,
			0xb8f8f8f0, 0xf8f8f8f8, 0xb0f0e000, 0xf0f0f0f0,
			0xa0c00000, 0xe0e0e0, 0x80000000, 0xc0c0, 0x0, 0x80, 0x0,
			0x0, 0x0, 0x20, 0xbfffffff, 0xfffcfcfc, 0xb8f8f8f0,
			0xf8f8f8f8, 0xb0f0e000, 0xf0f0f0f0, 0xa0c00000, 0xe0e0e0,
			0x80000000, 0xc0c0c0, 0x0, 0x8080, 0x0, 0x0, 0x0, 0x2020,
			0xbfffffff, 0xfcfcfcff, 0xb8f8f8f0, 0xf8f8f8fa,
			0xb0f0e000, 0xf0f0f0f4, 0xa0c00000, 0xe0e0e0e8,
			0x80000000, 0xc0c0d0, 0x0, 0x8080a0, 0x0, 0x40, 0x0,
			0x2020a0, 0xbfffffff, 0xfcfcffff, 0xb8f8f8f0, 0xf8f8fefa,
			0xb0f0e000, 0xf0f0fcf0, 0xa0c00000, 0xe0e0f8e0,
			0x80000000, 0xc0c0f0c0, 0x0, 0x8080e080, 0x0, 0xe000, 0x0,
			0x2020e020, 0xbffffcfc, 0xffffffff, 0xbffff8f8,
			0xffffffff, 0xbffff1f1, 0xffffffff, 0xbfffe3e3,
			0xffffffff, 0xbfffc7c7, 0xffffffff, 0xbfff8f8f,
			0xffffffff, 0xbfff1f1f, 0xffffffff, 0xbfff3f3f,
			0xffffffff, 0xbffcfcfc, 0xffffffff, 0xbff8f8f8,
			0xffffffff, 0xbff1f1f1, 0xffffffff, 0xbfe3e3e3,
			0xffffffff, 0xbfc7c7c7, 0xffffffff, 0xbf8f8f8f,
			0xffffffff, 0xbf1f1f1f, 0xffffffff, 0xbf3f3f3f,
			0xffffffff, 0xbcfcfcff, 0xffffffff, 0xb8f8f8ff,
			0xffffffff, 0xb1f1f1ff, 0xffffffff, 0xa3e3e3ff,
			0xffffffff, 0x87c7c7ff, 0xffffffff, 0x8f8f8fff,
			0xffffffff, 0x1f1f1fff, 0xffffffff, 0x3f3f3fff,
			0xffffffff, 0xbcfcffff, 0xfffffffc, 0xb8f8ffff,
			0xfffffff8, 0xb0f0f8f0, 0xf8fcfcf0, 0xa0e0e000,
			0xf0f8f8e0, 0x80c0e000, 0xf0f0c0, 0x80800000, 0xe080, 0x0,
			0x0, 0x30300000, 0xf030, 0xbcffffff, 0xfffffcfc,
			0xb8ffffff, 0xfffff8f8, 0xb0f8f8f0, 0xf8f8f0f0,
			0xa0f0e000, 0xf0f0e0e0, 0x80c00000, 0xe0c0c0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xbfffffff, 0xfffcfcfc, 0xbfffffff,
			0xfff8f8f8, 0xb8f8f8f0, 0xf8f0f0f0, 0xb0f0e000,
			0xf0e0e0e0, 0xa0c00000, 0xe0c0c0c0, 0x80000000, 0x808080,
			0x0, 0x0, 0x30000000, 0x303030, 0xbfffffff, 0xfcfcfcff,
			0xbfffffff, 0xf8f8f8ff, 0xbef8f8f0, 0xf0f0f0fa,
			0xbcf0e000, 0xe0e0e0f4, 0xb8c00000, 0xc0c0c0e8,
			0xb0000000, 0x808080d0, 0xa0000000, 0xa0, 0xb0000000,
			0x30303070, 0xbfffffff, 0xfcfcffff, 0xbfffffff,
			0xf8f8ffff, 0xb8f8f8f0, 0xf0f0fefe, 0xb0f0e000,
			0xe0e0fcfc, 0xa0c00000, 0xc0c0f8f8, 0x80000000,
			0x8080f0f0, 0x0, 0x10f0f0, 0x30000000, 0x3030f0f0,
			0xdffffcfc, 0xffffffff, 0xdffff8f8, 0xffffffff,
			0xdffff1f1, 0xffffffff, 0xdfffe3e3, 0xffffffff,
			0xdfffc7c7, 0xffffffff, 0xdfff8f8f, 0xffffffff,
			0xdfff1f1f, 0xffffffff, 0xdfff3f3f, 0xffffffff,
			0xdffcfcfc, 0xffffffff, 0xdff8f8f8, 0xffffffff,
			0xdff1f1f1, 0xffffffff, 0xdfe3e3e3, 0xffffffff,
			0xdfc7c7c7, 0xffffffff, 0xdf8f8f8f, 0xffffffff,
			0xdf1f1f1f, 0xffffffff, 0xdf3f3f3f, 0xffffffff,
			0xdcfcfcf8, 0xfcfefeff, 0xd8f8f000, 0xf8fcfcfe,
			0xd0f0f000, 0xf8f8fc, 0xc0e00000, 0xf0f8, 0x40400000,
			0x70, 0x0, 0x70, 0x10100000, 0x70, 0x18380000, 0x78f8,
			0xdcfcfcf8, 0xfcfcfefc, 0xd8f8f000, 0xf8f8fcf8,
			0xd0e00000, 0xf0f8f0, 0xc0e00000, 0xf0e0, 0x40000000,
			0x40, 0x0, 0x0, 0x10000000, 0x10, 0x18380000, 0x7838,
			0xdcfcfcf8, 0xfcfcfcfc, 0xd8f8f000, 0xf8f8f8f8,
			0xd0e00000, 0xf0f0f0, 0xc0000000, 0xe0e0, 0x0, 0x40, 0x0,
			0x0, 0x0, 0x10, 0x18000000, 0x3838, 0xdcfcfcf8,
			0xfcfcfcfc, 0xd8f8f000, 0xf8f8f8f8, 0xd0e00000, 0xf0f0f0,
			0xc0000000, 0xe0e0e0, 0x0, 0x4040, 0x0, 0x0, 0x0, 0x1010,
			0x18000000, 0x383838, 0xdcfcfcf8, 0xfcfcfcfd, 0xd8f8f000,
			0xf8f8f8fa, 0xd0e00000, 0xf0f0f0f4, 0xc0000000, 0xe0e0e8,
			0x0, 0x404050, 0x0, 0x20, 0x0, 0x101050, 0x18000000,
			0x3838b8, 0xdcfcfcf8, 0xfcfcfffd, 0xd8f8f000, 0xf8f8fef8,
			0xd0e00000, 0xf0f0fcf0, 0xc0000000, 0xe0e0f8e0, 0x0,
			0x40407040, 0x0, 0x7000, 0x0, 0x10107010, 0x18000000,
			0x3838f838, 0xdffffcfc, 0xffffffff, 0xdffff8f8,
			0xffffffff, 0xdffff1f1, 0xffffffff, 0xdfffe3e3,
			0xffffffff, 0xdfffc7c7, 0xffffffff, 0xdfff8f8f,
			0xffffffff, 0xdfff1f1f, 0xffffffff, 0xdfff3f3f,
			0xffffffff, 0xdffcfcfc, 0xffffffff, 0xdff8f8f8,
			0xffffffff, 0xdff1f1f1, 0xffffffff, 0xdfe3e3e3,
			0xffffffff, 0xdfc7c7c7, 0xffffffff, 0xdf8f8f8f,
			0xffffffff, 0xdf1f1f1f, 0xffffffff, 0xdf3f3f3f,
			0xffffffff, 0xdcfcfcff, 0xffffffff, 0xd8f8f8ff,
			0xffffffff, 0xd1f1f1ff, 0xffffffff, 0xc3e3e3ff,
			0xffffffff, 0xc7c7c7ff, 0xffffffff, 0x8f8f8fff,
			0xffffffff, 0x1f1f1fff, 0xffffffff, 0x1f3f3fff,
			0xffffffff, 0xdcfcffff, 0xfffffffc, 0xd8f8fcf8,
			0xfcfefef8, 0xd0f0f000, 0xf8fcfcf0, 0xc0e0f000, 0xf8f8e0,
			0xc0c00000, 0xf0c0, 0x0, 0x0, 0x18180000, 0x7818,
			0x1c3c7c00, 0xfcfc3c, 0xdcffffff, 0xfffffcfc, 0xd8fcfcf8,
			0xfcfcf8f8, 0xd0f8f000, 0xf8f8f0f0, 0xc0e00000, 0xf0e0e0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c3c0000, 0x7c3c3c,
			0xdfffffff, 0xfffcfcfc, 0xdcfcfcf8, 0xfcf8f8f8,
			0xd8f8f000, 0xf8f0f0f0, 0xd0e00000, 0xf0e0e0e0,
			0xc0000000, 0xc0c0c0, 0x0, 0x0, 0x18000000, 0x181818,
			0x5c3c0000, 0x7c3c3c3c, 0xdfffffff, 0xfcfcfcff,
			0xdffcfcf8, 0xf8f8f8fd, 0xdef8f000, 0xf0f0f0fa,
			0xdce00000, 0xe0e0e0f4, 0xd8000000, 0xc0c0c0e8,
			0x50000000, 0x50, 0xd8000000, 0x181818b8, 0xdc3c0000,
			0x3c3c3c7c, 0xdfffffff, 0xfcfcffff, 0xdcfcfcf8,
			0xf8f8ffff, 0xd8f8f000, 0xf0f0fefe, 0xd0e00000,
			0xe0e0fcfc, 0xc0000000, 0xc0c0f8f8, 0x0, 0x88f8f8,
			0x18000000, 0x1818f8f8, 0x5c3c0000, 0x3c3cfcfc,
			0xeffffcfc, 0xffffffff, 0xeffff8f8, 0xffffffff,
			0xeffff1f1, 0xffffffff, 0xefffe3e3, 0xffffffff,
			0xefffc7c7, 0xffffffff, 0xefff8f8f, 0xffffffff,
			0xefff1f1f, 0xffffffff, 0xefff3f3f, 0xffffffff,
			0xeffcfcfc, 0xffffffff, 0xeff8f8f8, 0xffffffff,
			0xeff1f1f1, 0xffffffff, 0xefe3e3e3, 0xffffffff,
			0xefc7c7c7, 0xffffffff, 0xef8f8f8f, 0xffffffff,
			0xef1f1f1f, 0xffffffff, 0xef3f3f3f, 0xffffffff,
			0xecfcf800, 0xfcfefeff, 0xe8f8f800, 0xfcfcfe, 0x60700000,
			0x787c, 0x20200000, 0x38, 0x0, 0x38, 0x8080000, 0x38,
			0xc1c0000, 0x3c7c, 0x2e3e3e00, 0x7e7efe, 0xecfcf800,
			0xfcfcfefc, 0xe8f00000, 0xf8fcf8, 0x60700000, 0x7870,
			0x20000000, 0x20, 0x0, 0x0, 0x8000000, 0x8, 0xc1c0000,
			0x3c1c, 0x2e1e0000, 0x3e7e3e, 0xecfcf800, 0xfcfcfcfc,
			0xe8f00000, 0xf8f8f8, 0x60000000, 0x7070, 0x0, 0x20, 0x0,
			0x0, 0x0, 0x8, 0xc000000, 0x1c1c, 0x2e1e0000, 0x3e3e3e,
			0xecfcf800, 0xfcfcfcfc, 0xe8f00000, 0xf8f8f8, 0x60000000,
			0x707070, 0x0, 0x2020, 0x0, 0x0, 0x0, 0x808, 0xc000000,
			0x1c1c1c, 0x2e1e0000, 0x3e3e3e, 0xecfcf800, 0xfcfcfcfd,
			0xe8f00000, 0xf8f8f8fa, 0x60000000, 0x707074, 0x0,
			0x202028, 0x0, 0x10, 0x0, 0x80828, 0xc000000, 0x1c1c5c,
			0x2e1e0000, 0x3e3e3ebe, 0xecfcf800, 0xfcfcfffc,
			0xe8f00000, 0xf8f8fef8, 0x60000000, 0x70707c70, 0x0,
			0x20203820, 0x0, 0x3800, 0x0, 0x8083808, 0xc000000,
			0x1c1c7c1c, 0x2e1e0000, 0x3e3efe3e, 0xeffffcfc,
			0xffffffff, 0xeffff8f8, 0xffffffff, 0xeffff1f1,
			0xffffffff, 0xefffe3e3, 0xffffffff, 0xefffc7c7,
			0xffffffff, 0xefff8f8f, 0xffffffff, 0xefff1f1f,
			0xffffffff, 0xefff3f3f, 0xffffffff, 0xeffcfcfc,
			0xffffffff, 0xeff8f8f8, 0xffffffff, 0xeff1f1f1,
			0xffffffff, 0xefe3e3e3, 0xffffffff, 0xefc7c7c7,
			0xffffffff, 0xef8f8f8f, 0xffffffff, 0xef1f1f1f,
			0xffffffff, 0xef3f3f3f, 0xffffffff, 0xecfcfcff,
			0xffffffff, 0xe8f8f8ff, 0xffffffff, 0xe1f1f1ff,
			0xffffffff, 0xe3e3e3ff, 0xffffffff, 0xc7c7c7ff,
			0xffffffff, 0x8f8f8fff, 0xffffffff, 0xf1f1fff, 0xffffffff,
			0x2f3f3fff, 0xffffffff, 0xecfcfefc, 0xfefffffc,
			0xe8f8f800, 0xfcfefef8, 0xe0f0f800, 0xfcfcf0, 0x60600000,
			0x7860, 0x0, 0x0, 0xc0c0000, 0x3c0c, 0xe1e3e00, 0x7e7e1e,
			0x2f3f3f00, 0x7fffff3f, 0xecfefefc, 0xfefefcfc,
			0xe8fcf800, 0xfcfcf8f8, 0xe0f00000, 0xf8f0f0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xe1e0000, 0x3e1e1e, 0x2f7f3f00,
			0x7f7f3f3f, 0xeefefefc, 0xfefcfcfc, 0xecfcf800,
			0xfcf8f8f8, 0xe8f00000, 0xf8f0f0f0, 0x60000000, 0x606060,
			0x0, 0x0, 0xc000000, 0xc0c0c, 0x2e1e0000, 0x3e1e1e1e,
			0x6f7f3f00, 0x7f3f3f3f, 0xeffefefc, 0xfcfcfcfe,
			0xeffcf800, 0xf8f8f8fd, 0xeef00000, 0xf0f0f0fa,
			0x6c000000, 0x60606074, 0x28000000, 0x28, 0x6c000000,
			0xc0c0c5c, 0xee1e0000, 0x1e1e1ebe, 0xef7f3f00, 0x3f3f3f7f,
			0xeefefefc, 0xfcfcffff, 0xecfcf800, 0xf8f8ffff,
			0xe8f00000, 0xf0f0fefe, 0x60000000, 0x60607c7c, 0x0,
			0x447c7c, 0xc000000, 0xc0c7c7c, 0x2e1e0000, 0x1e1efefe,
			0x6f7f3f00, 0x3f3fffff, 0xff7ffcfc, 0xffffffff,
			0xff7ff8f8, 0xffffffff, 0xff7ff1f1, 0xffffffff,
			0xff7fe3e3, 0xffffffff, 0xff7fc7c7, 0xffffffff,
			0xff7f8f8f, 0xffffffff, 0xff7f1f1f, 0xffffffff,
			0xff7f3f3f, 0xffffffff, 0xff7cfcfc, 0xffffffff,
			0xfe78f800, 0xf8f8fcfc, 0xfc70f000, 0xf0f0f8f8,
			0xf860e000, 0xe0f0f0, 0xf0404000, 0xe0e0, 0xe0000000,
			0xc0, 0xc0000000, 0x0, 0xc0000000, 0x0, 0xfc7cfcff,
			0xffffffff, 0xf8780000, 0xf8f8f8fc, 0xf0700000,
			0xf0f0f0f8, 0xe0600000, 0xe0e0f0, 0x40400000, 0x4060, 0x0,
			0x40, 0x0, 0x0, 0x0, 0x0, 0xfc7cffff, 0xfffffffc,
			0xf8000000, 0xf8f8f8f8, 0xf0000000, 0xf0f0f0f0,
			0xe0000000, 0xe0e0e0, 0x40000000, 0x4040, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0xfc7fffff, 0xfffffcfc, 0xf8000000,
			0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0, 0xe0e0e0, 0x0, 0x4040,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff7fffff, 0xfffcfcfc,
			0xf8000000, 0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0, 0xe0e000,
			0x0, 0x4000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff7fffff,
			0xfcfcfcff, 0xf8000000, 0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0,
			0xe0e000, 0x0, 0x400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xff7fffff, 0xfcfcffff, 0xf8000000, 0xf8f8f8f8, 0x0,
			0xf0f0f0f0, 0x0, 0xe0e0e000, 0x0, 0x40400000, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xff7ffcfc, 0xffffffff, 0xff7ff8f8,
			0xffffffff, 0xff7ff1f1, 0xffffffff, 0xff7fe3e3,
			0xffffffff, 0xff7fc7c7, 0xffffffff, 0xff7f8f8f,
			0xffffffff, 0xff7f1f1f, 0xffffffff, 0xff7f3f3f,
			0xffffffff, 0xff7cfcfc, 0xffffffff, 0xff78f8f8,
			0xffffffff, 0xff71f1f1, 0xffffffff, 0xff63e3e3,
			0xffffffff, 0xff47c7c7, 0xffffffff, 0xff0f8f8f,
			0xffffffff, 0xff1f1f1f, 0xffffffff, 0xff3f3f3f,
			0xffffffff, 0xfc7cfcff, 0xffffffff, 0xf878f8ff,
			0xffffffff, 0xf070f000, 0xf8f8fcfc, 0xe060e000,
			0xf0f0f8f8, 0xc040c000, 0xe0f0f0, 0x80000000, 0xe0e0, 0x0,
			0xc0, 0x0, 0x0, 0xfc7cffff, 0xfffffffc, 0xf878ffff,
			0xfffffff8, 0xf0700000, 0xf8f8f8f0, 0xe0600000,
			0xf0f0f0e0, 0xc0400000, 0xe0e0c0, 0x0, 0x4000, 0x0, 0x0,
			0x0, 0x0, 0xfc7fffff, 0xfffffcfc, 0xf87fffff, 0xfffff8f8,
			0xf0000000, 0xf8f8f0f0, 0xe0000000, 0xf0f0e0e0,
			0xc0000000, 0xe0c0c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xff7fffff, 0xfffcfcfc, 0xff7fffff, 0xfff8f8f8,
			0xf8000000, 0xf8f0f0f0, 0x0, 0xf0e0e0e0, 0x0, 0xc0c0c0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff7fffff, 0xfcfcfcff,
			0xff7fffff, 0xf8f8f8ff, 0xf8000000, 0xf0f0f0f8, 0x0,
			0xe0e0e0f0, 0x0, 0xc0c0c000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xff7fffff, 0xfcfcffff, 0xff7fffff, 0xf8f8ffff,
			0xf8000000, 0xf0f0f8f8, 0x0, 0xe0e0f0f0, 0x0, 0xc0c0e000,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffbffcfc, 0xffffffff,
			0xffbff8f8, 0xffffffff, 0xffbff1f1, 0xffffffff,
			0xffbfe3e3, 0xffffffff, 0xffbfc7c7, 0xffffffff,
			0xffbf8f8f, 0xffffffff, 0xffbf1f1f, 0xffffffff,
			0xffbf3f3f, 0xffffffff, 0xffbcfcfc, 0xfcfcfefe,
			0xfeb8f8f8, 0xf8f8fcfc, 0xfcb0f0e0, 0xf0f8f8, 0xf8a0e0e0,
			0xf0f0, 0xf080c000, 0xe0, 0xe0808000, 0x0, 0xe0000000,
			0x0, 0xe0202000, 0x0, 0xfcbcfcfc, 0xfcfcfcfe, 0xf8b8f8f8,
			0xf8f8f8fc, 0xf0b0f0e0, 0xf0f0f8, 0xe0a0c000, 0xe0f0,
			0xc080c000, 0xe0, 0x80800000, 0x0, 0x0, 0x0, 0x20200000,
			0x0, 0xfcbcfcfc, 0xfcfcfcfc, 0xf8b8f8f8, 0xf8f8f8f8,
			0xf0b0f0e0, 0xf0f0f0, 0xe0a0c000, 0xe0e0, 0xc0800000,
			0xc0, 0x80000000, 0x0, 0x0, 0x0, 0x20000000, 0x0,
			0xfcbcfcfc, 0xfcfcfcfc, 0xf8b8f8f8, 0xf8f8f8f8,
			0xf0b0f0e0, 0xf0f0f0, 0xe0a0c000, 0xe0e0, 0xc0800000,
			0xc0c0, 0x80000000, 0x80, 0x0, 0x0, 0x20000000, 0x20,
			0xfdbcfcfc, 0xfcfcfcfc, 0xfab8f8f8, 0xf8f8f8f8,
			0xf4b0f0e0, 0xf0f0f0, 0xe8a0c000, 0xe0e0e0, 0xd0800000,
			0xc0c0, 0xa0000000, 0x8080, 0x40000000, 0x0, 0xa0000000,
			0x2020, 0xfdbcfcfc, 0xfcfcfcff, 0xf8b8f8f8, 0xf8f8f8fe,
			0xf0b0f0e0, 0xf0f0f0fc, 0xe0a0c000, 0xe0e0f8, 0xc0800000,
			0xc0c0f0, 0x80000000, 0x8080e0, 0x0, 0xe0, 0x20000000,
			0x2020e0, 0xffbcfcfc, 0xfcfcffff, 0xfeb8f8f8, 0xf8f8fefe,
			0xfcb0f0e0, 0xf0f0fcfc, 0xf8a0c000, 0xe0e0f8f8,
			0xf0800000, 0xc0c0f0f0, 0xf0000000, 0x8080f0f0,
			0xf0000000, 0xf0f0, 0xf0000000, 0x2020f0f0, 0xffbffcfc,
			0xffffffff, 0xffbff8f8, 0xffffffff, 0xffbff1f1,
			0xffffffff, 0xffbfe3e3, 0xffffffff, 0xffbfc7c7,
			0xffffffff, 0xffbf8f8f, 0xffffffff, 0xffbf1f1f,
			0xffffffff, 0xffbf3f3f, 0xffffffff, 0xffbcfcfc,
			0xffffffff, 0xffb8f8f8, 0xffffffff, 0xffb1f1f1,
			0xffffffff, 0xffa3e3e3, 0xffffffff, 0xff87c7c7,
			0xffffffff, 0xff8f8f8f, 0xffffffff, 0xff1f1f1f,
			0xffffffff, 0xff3f3f3f, 0xffffffff, 0xfcbcfcff,
			0xffffffff, 0xf8b8f8fc, 0xfcfcfefe, 0xf0b0f0f8,
			0xf8f8fcfc, 0xe0a0e0e0, 0xf0f8f8, 0xc080c0e0, 0xf0f0,
			0x80808000, 0xe0, 0x0, 0x0, 0x30303000, 0xf0, 0xfcbcffff,
			0xfffffffc, 0xf8b8fcfc, 0xfcfcfcf8, 0xf0b0f8f8,
			0xf8f8f8f0, 0xe0a0f0e0, 0xf0f0e0, 0xc080c000, 0xe0c0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0xfcbfffff, 0xfffffcfc,
			0xf8bcfcfc, 0xfcfcf8f8, 0xf0b8f8f8, 0xf8f8f0f0,
			0xe0b0f0e0, 0xf0e0e0, 0xc0a0c000, 0xe0c0c0, 0x80800000,
			0x8080, 0x0, 0x0, 0x30300000, 0x3030, 0xffbfffff,
			0xfffcfcfc, 0xfdbffcfc, 0xfcf8f8f8, 0xfabef8f8,
			0xf8f0f0f0, 0xf4bcf0e0, 0xf0e0e0e0, 0xe8b8c000, 0xc0c0c0,
			0xd0b00000, 0x808080, 0xa0a00000, 0x0, 0x70b00000,
			0x303030, 0xffbfffff, 0xfcfcfcff, 0xffbcfcfc, 0xf8f8f8ff,
			0xfeb8f8f8, 0xf0f0f0fe, 0xfcb0f0e0, 0xe0e0e0fc,
			0xf8a0c000, 0xc0c0c0f8, 0xf0800000, 0x808080f0,
			0xf0000000, 0x10f0, 0xf0300000, 0x303030f0, 0xffbfffff,
			0xfcfcffff, 0xffbffcfc, 0xf8f8ffff, 0xfebef8f8,
			0xf0f0fefe, 0xfcbcf0e0, 0xe0e0fcfc, 0xf8b8c000,
			0xc0c0f8f8, 0xf8b80000, 0x8088f8f8, 0xf8b80000, 0x18f8f8,
			0xf8b80000, 0x3038f8f8, 0xffdffcfc, 0xffffffff,
			0xffdff8f8, 0xffffffff, 0xffdff1f1, 0xffffffff,
			0xffdfe3e3, 0xffffffff, 0xffdfc7c7, 0xffffffff,
			0xffdf8f8f, 0xffffffff, 0xffdf1f1f, 0xffffffff,
			0xffdf3f3f, 0xffffffff, 0xffdcfcfc, 0xfcfcfefe,
			0xfed8f8f0, 0xf8fcfc, 0xfcd0f0f0, 0xf8f8, 0xf8c0e000,
			0xf0, 0x70404000, 0x0, 0x70000000, 0x0, 0x70101000, 0x0,
			0xf8183800, 0x78, 0xfcdcfcfc, 0xfcfcfcfe, 0xf8d8f8f0,
			0xf8f8fc, 0xf0d0e000, 0xf0f8, 0xe0c0e000, 0xf0,
			0x40400000, 0x0, 0x0, 0x0, 0x10100000, 0x0, 0x38183800,
			0x78, 0xfcdcfcfc, 0xfcfcfcfc, 0xf8d8f8f0, 0xf8f8f8,
			0xf0d0e000, 0xf0f0, 0xe0c00000, 0xe0, 0x40000000, 0x0,
			0x0, 0x0, 0x10000000, 0x0, 0x38180000, 0x38, 0xfcdcfcfc,
			0xfcfcfcfc, 0xf8d8f8f0, 0xf8f8f8, 0xf0d0e000, 0xf0f0,
			0xe0c00000, 0xe0e0, 0x40000000, 0x40, 0x0, 0x0,
			0x10000000, 0x10, 0x38180000, 0x3838, 0xfddcfcfc,
			0xfcfcfcfc, 0xfad8f8f0, 0xf8f8f8, 0xf4d0e000, 0xf0f0f0,
			0xe8c00000, 0xe0e0, 0x50000000, 0x4040, 0x20000000, 0x0,
			0x50000000, 0x1010, 0xb8180000, 0x3838, 0xfcdcfcfc,
			0xfcfcfcff, 0xf8d8f8f0, 0xf8f8f8fe, 0xf0d0e000, 0xf0f0fc,
			0xe0c00000, 0xe0e0f8, 0x40000000, 0x404070, 0x0, 0x70,
			0x10000000, 0x101070, 0x38180000, 0x3838f8, 0xffdcfcfc,
			0xfcfcffff, 0xfed8f8f0, 0xf8f8fefe, 0xfcd0e000,
			0xf0f0fcfc, 0xf8c00000, 0xe0e0f8f8, 0xf8000000,
			0x4040f8f8, 0xf8000000, 0xf8f8, 0xf8000000, 0x1010f8f8,
			0xf8180000, 0x3838f8f8, 0xffdffcfc, 0xffffffff,
			0xffdff8f8, 0xffffffff, 0xffdff1f1, 0xffffffff,
			0xffdfe3e3, 0xffffffff, 0xffdfc7c7, 0xffffffff,
			0xffdf8f8f, 0xffffffff, 0xffdf1f1f, 0xffffffff,
			0xffdf3f3f, 0xffffffff, 0xffdcfcfc, 0xffffffff,
			0xffd8f8f8, 0xffffffff, 0xffd1f1f1, 0xffffffff,
			0xffc3e3e3, 0xffffffff, 0xffc7c7c7, 0xffffffff,
			0xff8f8f8f, 0xffffffff, 0xff1f1f1f, 0xffffffff,
			0xff1f3f3f, 0xffffffff, 0xfcdcfcfe, 0xfefeffff,
			0xf8d8f8fc, 0xfcfcfefe, 0xf0d0f0f0, 0xf8fcfc, 0xe0c0e0f0,
			0xf8f8, 0xc0c0c000, 0xf0, 0x0, 0x0, 0x18181800, 0x78,
			0x3c1c3c7c, 0xfcfc, 0xfcdcfefe, 0xfefefefc, 0xf8d8fcfc,
			0xfcfcfcf8, 0xf0d0f8f0, 0xf8f8f0, 0xe0c0e000, 0xf0e0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x3c1c3c00, 0x7c3c, 0xfcdefefe,
			0xfefefcfc, 0xf8dcfcfc, 0xfcfcf8f8, 0xf0d8f8f0, 0xf8f0f0,
			0xe0d0e000, 0xf0e0e0, 0xc0c00000, 0xc0c0, 0x0, 0x0,
			0x18180000, 0x1818, 0x3c5c3c00, 0x7c3c3c, 0xfedffefe,
			0xfefcfcfc, 0xfddffcfc, 0xfcf8f8f8, 0xfadef8f0,
			0xf8f0f0f0, 0xf4dce000, 0xe0e0e0, 0xe8d80000, 0xc0c0c0,
			0x50500000, 0x0, 0xb8d80000, 0x181818, 0x7cdc3c00,
			0x3c3c3c, 0xffdefefe, 0xfcfcfcff, 0xffdcfcfc, 0xf8f8f8ff,
			0xfed8f8f0, 0xf0f0f0fe, 0xfcd0e000, 0xe0e0e0fc,
			0xf8c00000, 0xc0c0c0f8, 0xf8000000, 0x88f8, 0xf8180000,
			0x181818f8, 0xfc5c3c00, 0x3c3c3cfc, 0xffdffefe,
			0xfcfcffff, 0xffdffcfc, 0xf8f8ffff, 0xfedef8f0,
			0xf0f0fefe, 0xfcdce000, 0xe0e0fcfc, 0xfcdc0000,
			0xc0c4fcfc, 0xfcdc0000, 0x8cfcfc, 0xfcdc0000, 0x181cfcfc,
			0xfcdc3c00, 0x3c3cfcfc, 0xffeffcfc, 0xffffffff,
			0xffeff8f8, 0xffffffff, 0xffeff1f1, 0xffffffff,
			0xffefe3e3, 0xffffffff, 0xffefc7c7, 0xffffffff,
			0xffef8f8f, 0xffffffff, 0xffef1f1f, 0xffffffff,
			0xffef3f3f, 0xffffffff, 0xffecfcf8, 0xfcfefe, 0xfee8f8f8,
			0xfcfc, 0x7c607000, 0x78, 0x38202000, 0x0, 0x38000000,
			0x0, 0x38080800, 0x0, 0x7c0c1c00, 0x3c, 0xfe2e3e3e,
			0x7e7e, 0xfcecfcf8, 0xfcfcfe, 0xf8e8f000, 0xf8fc,
			0x70607000, 0x78, 0x20200000, 0x0, 0x0, 0x0, 0x8080000,
			0x0, 0x1c0c1c00, 0x3c, 0x3e2e1e00, 0x3e7e, 0xfcecfcf8,
			0xfcfcfc, 0xf8e8f000, 0xf8f8, 0x70600000, 0x70,
			0x20000000, 0x0, 0x0, 0x0, 0x8000000, 0x0, 0x1c0c0000,
			0x1c, 0x3e2e1e00, 0x3e3e, 0xfcecfcf8, 0xfcfcfc,
			0xf8e8f000, 0xf8f8, 0x70600000, 0x7070, 0x20000000, 0x20,
			0x0, 0x0, 0x8000000, 0x8, 0x1c0c0000, 0x1c1c, 0x3e2e1e00,
			0x3e3e, 0xfdecfcf8, 0xfcfcfc, 0xfae8f000, 0xf8f8f8,
			0x74600000, 0x7070, 0x28000000, 0x2020, 0x10000000, 0x0,
			0x28000000, 0x808, 0x5c0c0000, 0x1c1c, 0xbe2e1e00,
			0x3e3e3e, 0xfcecfcf8, 0xfcfcfcff, 0xf8e8f000, 0xf8f8fe,
			0x70600000, 0x70707c, 0x20000000, 0x202038, 0x0, 0x38,
			0x8000000, 0x80838, 0x1c0c0000, 0x1c1c7c, 0x3e2e1e00,
			0x3e3efe, 0xffecfcf8, 0xfcfcffff, 0xfee8f000, 0xf8f8fefe,
			0x7c600000, 0x70707c7c, 0x7c000000, 0x20207c7c,
			0x7c000000, 0x7c7c, 0x7c000000, 0x8087c7c, 0x7c0c0000,
			0x1c1c7c7c, 0xfe2e1e00, 0x3e3efefe, 0xffeffcfc,
			0xffffffff, 0xffeff8f8, 0xffffffff, 0xffeff1f1,
			0xffffffff, 0xffefe3e3, 0xffffffff, 0xffefc7c7,
			0xffffffff, 0xffef8f8f, 0xffffffff, 0xffef1f1f,
			0xffffffff, 0xffef3f3f, 0xffffffff, 0xffecfcfc,
			0xffffffff, 0xffe8f8f8, 0xffffffff, 0xffe1f1f1,
			0xffffffff, 0xffe3e3e3, 0xffffffff, 0xffc7c7c7,
			0xffffffff, 0xff8f8f8f, 0xffffffff, 0xff0f1f1f,
			0xffffffff, 0xff2f3f3f, 0xffffffff, 0xfcecfcfe,
			0xfefeffff, 0xf8e8f8f8, 0xfcfefe, 0xf0e0f0f8, 0xfcfc,
			0x60606000, 0x78, 0x0, 0x0, 0xc0c0c00, 0x3c, 0x1e0e1e3e,
			0x7e7e, 0x3f2f3f3f, 0x7fffff, 0xfcecfefe, 0xfefefefc,
			0xf8e8fcf8, 0xfcfcf8, 0xf0e0f000, 0xf8f0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x1e0e1e00, 0x3e1e, 0x3f2f7f3f, 0x7f7f3f,
			0xfceefefe, 0xfefefcfc, 0xf8ecfcf8, 0xfcf8f8, 0xf0e8f000,
			0xf8f0f0, 0x60600000, 0x6060, 0x0, 0x0, 0xc0c0000, 0xc0c,
			0x1e2e1e00, 0x3e1e1e, 0x3f6f7f3f, 0x7f3f3f, 0xfeeffefe,
			0xfefcfcfc, 0xfdeffcf8, 0xfcf8f8f8, 0xfaeef000, 0xf0f0f0,
			0x746c0000, 0x606060, 0x28280000, 0x0, 0x5c6c0000,
			0xc0c0c, 0xbeee1e00, 0x1e1e1e, 0x7fef7f3f, 0x7f3f3f3f,
			0xffeefefe, 0xfcfcfcff, 0xffecfcf8, 0xf8f8f8ff,
			0xfee8f000, 0xf0f0f0fe, 0x7c600000, 0x6060607c,
			0x7c000000, 0x447c, 0x7c0c0000, 0xc0c0c7c, 0xfe2e1e00,
			0x1e1e1efe, 0xff6f7f3f, 0x3f3f3fff, 0xffeffefe,
			0xfcfcffff, 0xffeffcf8, 0xf8f8ffff, 0xfeeef000,
			0xf0f0fefe, 0xfeee0000, 0x60e2fefe, 0xfeee0000, 0xc6fefe,
			0xfeee0000, 0xc8efefe, 0xfeee1e00, 0x1e1efefe, 0xffef7f3f,
			0x3f3fffff, 0xffff7cfc, 0xffffffff, 0xffff78f8,
			0xffffffff, 0xffff71f1, 0xffffffff, 0xffff63e3,
			0xffffffff, 0xffff47c7, 0xffffffff, 0xffff0f8f,
			0xffffffff, 0xc00000, 0x0, 0xc00000, 0x0, 0xfffc7cfc,
			0xffffffff, 0xfef87800, 0xf8f8fefe, 0xfcf07000,
			0xf0f0fcfc, 0xf8e06000, 0xe0f8f8, 0xf0404000, 0xf0f0,
			0xf0000000, 0xf0f0, 0x0, 0x0, 0x0, 0x0, 0xfcfc7cff,
			0xffffffff, 0xf8f80000, 0xf8f8f8fe, 0xf0f00000,
			0xf0f0f0fc, 0xe0e00000, 0xe0e0f8, 0x40400000, 0x4070, 0x0,
			0x60, 0x0, 0x0, 0x0, 0x0, 0xfcfc7fff, 0xfffffffc,
			0xf8000000, 0xf8f8f8f8, 0xf0000000, 0xf0f0f0f0,
			0xe0000000, 0xe0e0e0, 0x40000000, 0x4040, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0xfcff7fff, 0xfffffcfc, 0xf8000000,
			0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0, 0xe0e0e0, 0x0, 0x4040,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff7fff, 0xfffcfcfc,
			0xf8000000, 0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0, 0xe0e000,
			0x0, 0x4000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff7fff,
			0xfcfcfcff, 0xf8000000, 0xf8f8f8f8, 0x0, 0xf0f0f0f0, 0x0,
			0xe0e000, 0x0, 0x400000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0xffff7fff, 0xfcfcffff, 0xf8000000, 0xf8f8f8f8, 0x0,
			0xf0f0f0f0, 0x0, 0xe0e0e000, 0x0, 0x40400000, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xffff7cfc, 0xffffffff, 0xffff78f8,
			0xffffffff, 0xffff71f1, 0xffffffff, 0xffff63e3,
			0xffffffff, 0xffff47c7, 0xffffffff, 0xffff0f8f,
			0xffffffff, 0xffff1f1f, 0xffffffff, 0xffff3f3f,
			0xffffffff, 0xfffc7cfc, 0xffffffff, 0xfff878f8,
			0xffffffff, 0xfff171f1, 0xffffffff, 0xffe363e3,
			0xffffffff, 0xffc747c7, 0xffffffff, 0xff8f0f8f,
			0xffffffff, 0xff1f1f1f, 0xffffffff, 0x0, 0x0, 0xfcfc7cff,
			0xffffffff, 0xf8f878ff, 0xffffffff, 0xf0f07000,
			0xf8f8fefe, 0xe0e06000, 0xf0f0fcfc, 0xc0c04000, 0xe0f8f8,
			0x80000000, 0xf0f0, 0x0, 0x0, 0x0, 0x0, 0xfcfc7fff,
			0xfffffffc, 0xf8f87fff, 0xfffffff8, 0xf0f00000,
			0xf8f8f8f0, 0xe0e00000, 0xf0f0f0e0, 0xc0c00000, 0xe0e0c0,
			0x0, 0x4000, 0x0, 0x0, 0x0, 0x0, 0xfcff7fff, 0xfffffcfc,
			0xf8ff7fff, 0xfffff8f8, 0xf0000000, 0xf8f8f0f0,
			0xe0000000, 0xf0f0e0e0, 0xc0000000, 0xe0c0c0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xffff7fff, 0xfffcfcfc, 0xffff7fff,
			0xfff8f8f8, 0xf8000000, 0xf8f0f0f0, 0x0, 0xf0e0e0e0, 0x0,
			0xc0c0c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffff7fff,
			0xfcfcfcff, 0xffff7fff, 0xf8f8f8ff, 0xf8000000,
			0xf0f0f0f8, 0x0, 0xe0e0e0f0, 0x0, 0xc0c0c000, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0, 0xffff7fff, 0xfcfcffff, 0xffff7fff,
			0xf8f8ffff, 0xf8000000, 0xf0f0f8f8, 0x0, 0xe0e0f0f0, 0x0,
			0xc0c0e000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffbcfc,
			0xffffffff, 0xffffb8f8, 0xffffffff, 0xffffb1f1,
			0xffffffff, 0xffffa3e3, 0xffffffff, 0xffff87c7,
			0xffffffff, 0xe08080, 0x0, 0xe00000, 0x0, 0xe02020, 0x0,
			0xfffcbcfc, 0xfcfcffff, 0xfef8b8f8, 0xf8f8fefe,
			0xfcf0b0f0, 0xf0fcfc, 0xf8e0a0c0, 0xf8f8, 0xf8c080c0,
			0xf8f8, 0x808000, 0x0, 0x0, 0x0, 0x202000, 0x0,
			0xfcfcbcfc, 0xfcfcfcff, 0xf8f8b8f8, 0xf8f8f8fe,
			0xf0f0b0f0, 0xf0f0fc, 0xe0e0a0c0, 0xe0f8, 0xc0c08000,
			0xf0, 0x800000, 0x0, 0x0, 0x0, 0x200000, 0x0, 0xfcfcbcfc,
			0xfcfcfcfc, 0xf8f8b8f8, 0xf8f8f8f8, 0xf0f0b0f0, 0xf0f0f0,
			0xe0e0a0c0, 0xe0e0, 0xc0c08000, 0xc0, 0x80800000, 0x0,
			0x0, 0x0, 0x20200000, 0x0, 0xfcfdbcfc, 0xfcfcfcfc,
			0xf8fab8f8, 0xf8f8f8f8, 0xf0f4b0f0, 0xf0f0f0, 0xe0e8a0c0,
			0xe0e0, 0xc0d08000, 0xc0, 0x80a00000, 0x80, 0x400000, 0x0,
			0x20a00000, 0x20, 0xfffdbcfc, 0xfcfcfcfc, 0xfef8b8f8,
			0xf8f8f8f8, 0xfcf0b0f0, 0xf0f0f0, 0xf8e0a0c0, 0xe0e0,
			0xf0c08000, 0xc0c0, 0xe0800000, 0x8080, 0xe0000000, 0x0,
			0xe0200000, 0x2020, 0xffffbcfc, 0xfcfcfcff, 0xfefeb8f8,
			0xf8f8f8fe, 0xfcfcb0f0, 0xf0f0fc, 0xf8f8a0c0, 0xe0e0f8,
			0xf0f08000, 0xc0c0f0, 0xf0f00000, 0x8080f0, 0xf0f00000,
			0xf0, 0xf0f00000, 0x2020f0, 0xffffbffc, 0xfcfcffff,
			0xfefebef8, 0xf8f8fefe, 0xfcfcbcf0, 0xf0f0fcfc,
			0xf8f8b8c0, 0xe0e0f8f8, 0xf8f8b800, 0xc0c0f8f8,
			0xf8f8b800, 0x8080f8f8, 0xf8f8b800, 0xf8f8, 0xf8f8b800,
			0x2020f8f8, 0xffffbcfc, 0xffffffff, 0xffffb8f8,
			0xffffffff, 0xffffb1f1, 0xffffffff, 0xffffa3e3,
			0xffffffff, 0xffff87c7, 0xffffffff, 0xffff8f8f,
			0xffffffff, 0xffff1f1f, 0xffffffff, 0xffff3f3f,
			0xffffffff, 0xfffcbcfc, 0xffffffff, 0xfff8b8f8,
			0xffffffff, 0xfff1b1f1, 0xffffffff, 0xffe3a3e3,
			0xffffffff, 0xffc787c7, 0xffffffff, 0xff8f8f8f,
			0xffffffff, 0x0, 0x0, 0xff3f3f3f, 0xffffffff, 0xfcfcbcff,
			0xffffffff, 0xf8f8b8fc, 0xfcfcffff, 0xf0f0b0f8,
			0xf8f8fefe, 0xe0e0a0f0, 0xf0fcfc, 0xc0c080c0, 0xf8f8, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0xfcfcbfff, 0xfffffffc,
			0xf8f8bcfc, 0xfcfcfcf8, 0xf0f0b8f8, 0xf8f8f8f0,
			0xe0e0b0f0, 0xf0f0e0, 0xc0c0a0c0, 0xe0c0, 0x80808000,
			0x80, 0x0, 0x0, 0x30303000, 0x30, 0xfcffbfff, 0xfffffcfc,
			0xf8fdbffc, 0xfcfcf8f8, 0xf0fabef8, 0xf8f8f0f0,
			0xe0f4bcf0, 0xf0e0e0, 0xc0e8b8c0, 0xc0c0, 0x80d0b000,
			0x8080, 0xa0a000, 0x0, 0x3070b000, 0x3030, 0xffffbfff,
			0xfffcfcfc, 0xffffbcfc, 0xfcf8f8f8, 0xfefeb8f8,
			0xf8f0f0f0, 0xfcfcb0f0, 0xe0e0e0, 0xf8f8a0c0, 0xc0c0c0,
			0xf0f08000, 0x808080, 0xf0f00000, 0x10, 0xf0f03000,
			0x303030, 0xffffbfff, 0xfcfcfcff, 0xffffbffc, 0xf8f8f8ff,
			0xfefebef8, 0xf0f0f0fe, 0xfcfcbcf0, 0xe0e0e0fc,
			0xf8f8b8c0, 0xc0c0c0f8, 0xf8f8b800, 0x808088f8,
			0xf8f8b800, 0x18f8, 0xf8f8b800, 0x303038f8, 0xffffbfff,
			0xfcfcffff, 0xffffbfff, 0xf8f8ffff, 0xfefebefe,
			0xf0f0fefe, 0xfcfcbcfc, 0xe0e0fcfc, 0xfcfcbcfc,
			0xc0c4fcfc, 0xfcfcbcfc, 0x808cfcfc, 0xfcfcbcfc, 0x1cfcfc,
			0xfcfcbcfc, 0x303cfcfc, 0xffffdcfc, 0xffffffff,
			0xffffd8f8, 0xffffffff, 0xffffd1f1, 0xffffffff,
			0xffffc3e3, 0xffffffff, 0x704040, 0x0, 0x700000, 0x0,
			0x701010, 0x0, 0xffff1f3f, 0xffffffff, 0xfffcdcfc,
			0xfcfcffff, 0xfef8d8f8, 0xf8fefe, 0xfcf0d0e0, 0xfcfc,
			0xfce0c0e0, 0xfcfc, 0x404000, 0x0, 0x0, 0x0, 0x101000,
			0x0, 0xfc3c1c3c, 0xfcfc, 0xfcfcdcfc, 0xfcfcfcff,
			0xf8f8d8f8, 0xf8f8fe, 0xf0f0d0e0, 0xf0fc, 0xe0e0c000,
			0xf8, 0x400000, 0x0, 0x0, 0x0, 0x100000, 0x0, 0x38381800,
			0xf8, 0xfcfcdcfc, 0xfcfcfcfc, 0xf8f8d8f8, 0xf8f8f8,
			0xf0f0d0e0, 0xf0f0, 0xe0e0c000, 0xe0, 0x40400000, 0x0,
			0x0, 0x0, 0x10100000, 0x0, 0x38381800, 0x38, 0xfcfddcfc,
			0xfcfcfcfc, 0xf8fad8f8, 0xf8f8f8, 0xf0f4d0e0, 0xf0f0,
			0xe0e8c000, 0xe0, 0x40500000, 0x40, 0x200000, 0x0,
			0x10500000, 0x10, 0x38b81800, 0x38, 0xfffcdcfc,
			0xfcfcfcfc, 0xfef8d8f8, 0xf8f8f8, 0xfcf0d0e0, 0xf0f0,
			0xf8e0c000, 0xe0e0, 0x70400000, 0x4040, 0x70000000, 0x0,
			0x70100000, 0x1010, 0xf8381800, 0x3838, 0xffffdcfc,
			0xfcfcfcff, 0xfefed8f8, 0xf8f8fe, 0xfcfcd0e0, 0xf0f0fc,
			0xf8f8c000, 0xe0e0f8, 0xf8f80000, 0x4040f8, 0xf8f80000,
			0xf8, 0xf8f80000, 0x1010f8, 0xf8f81800, 0x3838f8,
			0xffffdffc, 0xfcfcffff, 0xfefedef8, 0xf8f8fefe,
			0xfcfcdce0, 0xf0f0fcfc, 0xfcfcdc00, 0xe0e0fcfc,
			0xfcfcdc00, 0x4040fcfc, 0xfcfcdc00, 0xfcfc, 0xfcfcdc00,
			0x1010fcfc, 0xfcfcdc00, 0x3838fcfc, 0xffffdcfc,
			0xffffffff, 0xffffd8f8, 0xffffffff, 0xffffd1f1,
			0xffffffff, 0xffffc3e3, 0xffffffff, 0xffffc7c7,
			0xffffffff, 0xffff8f8f, 0xffffffff, 0xffff1f1f,
			0xffffffff, 0xffff1f3f, 0xffffffff, 0xfffcdcfc,
			0xffffffff, 0xfff8d8f8, 0xffffffff, 0xfff1d1f1,
			0xffffffff, 0xffe3c3e3, 0xffffffff, 0xffc7c7c7,
			0xffffffff, 0x0, 0x0, 0xff1f1f1f, 0xffffffff, 0xff3f1f3f,
			0xffffffff, 0xfcfcdcfe, 0xfefeffff, 0xf8f8d8fc,
			0xfcfcffff, 0xf0f0d0f8, 0xf8fefe, 0xe0e0c0e0, 0xfcfc, 0x0,
			0x0, 0x0, 0x0, 0x0, 0x0, 0x3c3c1c3c, 0xfcfc, 0xfcfcdefe,
			0xfefefefc, 0xf8f8dcfc, 0xfcfcfcf8, 0xf0f0d8f8, 0xf8f8f0,
			0xe0e0d0e0, 0xf0e0, 0xc0c0c000, 0xc0, 0x0, 0x0,
			0x18181800, 0x18, 0x3c3c5c3c, 0x7c3c, 0xfcfedffe,
			0xfefefcfc, 0xf8fddffc, 0xfcfcf8f8, 0xf0fadef8, 0xf8f0f0,
			0xe0f4dce0, 0xe0e0, 0xc0e8d800, 0xc0c0, 0x505000, 0x0,
			0x18b8d800, 0x1818, 0x3c7cdc3c, 0x3c3c, 0xffffdefe,
			0xfefcfcfc, 0xffffdcfc, 0xfcf8f8f8, 0xfefed8f8, 0xf0f0f0,
			0xfcfcd0e0, 0xe0e0e0, 0xf8f8c000, 0xc0c0c0, 0xf8f80000,
			0x88, 0xf8f81800, 0x181818, 0xfcfc5c3c, 0x3c3c3c,
			0xffffdffe, 0xfcfcfcff, 0xffffdffc, 0xf8f8f8ff,
			0xfefedef8, 0xf0f0f0fe, 0xfcfcdce0, 0xe0e0e0fc,
			0xfcfcdc00, 0xc0c0c4fc, 0xfcfcdc00, 0x8cfc, 0xfcfcdc00,
			0x18181cfc, 0xfcfcdc3c, 0x3c3c3cfc, 0xffffdfff,
			0xfcfcffff, 0xffffdfff, 0xf8f8ffff, 0xfefedefe,
			0xf0f0fefe, 0xfefedefe, 0xe0e2fefe, 0xfefedefe,
			0xc0c6fefe, 0xfefedefe, 0x8efefe, 0xfefedefe, 0x181efefe,
			0xfefedefe, 0x3c3efefe, 0xffffecfc, 0xffffffff,
			0xffffe8f8, 0xffffffff, 0xffffe1f1, 0xffffffff, 0x382020,
			0x0, 0x380000, 0x0, 0x380808, 0x0, 0xffff0f1f, 0xffffffff,
			0xffff2f3f, 0xffffffff, 0xfffcecfc, 0xfcffff, 0xfef8e8f0,
			0xfefe, 0xfef0e0f0, 0xfefe, 0x202000, 0x0, 0x0, 0x0,
			0x80800, 0x0, 0xfe1e0e1e, 0xfefe, 0xfe3e2e1e, 0xfefe,
			0xfcfcecfc, 0xfcfcff, 0xf8f8e8f0, 0xf8fe, 0x70706000,
			0x7c, 0x200000, 0x0, 0x0, 0x0, 0x80000, 0x0, 0x1c1c0c00,
			0x7c, 0x3e3e2e1e, 0x3efe, 0xfcfcecfc, 0xfcfcfc,
			0xf8f8e8f0, 0xf8f8, 0x70706000, 0x70, 0x20200000, 0x0,
			0x0, 0x0, 0x8080000, 0x0, 0x1c1c0c00, 0x1c, 0x3e3e2e1e,
			0x3e3e, 0xfcfdecfc, 0xfcfcfc, 0xf8fae8f0, 0xf8f8,
			0x70746000, 0x70, 0x20280000, 0x20, 0x100000, 0x0,
			0x8280000, 0x8, 0x1c5c0c00, 0x1c, 0x3ebe2e1e, 0x3e3e,
			0xfffcecfc, 0xfcfcfc, 0xfef8e8f0, 0xf8f8, 0x7c706000,
			0x7070, 0x38200000, 0x2020, 0x38000000, 0x0, 0x38080000,
			0x808, 0x7c1c0c00, 0x1c1c, 0xfe3e2e1e, 0x3e3e, 0xffffecfc,
			0xfcfcff, 0xfefee8f0, 0xf8f8fe, 0x7c7c6000, 0x70707c,
			0x7c7c0000, 0x20207c, 0x7c7c0000, 0x7c, 0x7c7c0000,
			0x8087c, 0x7c7c0c00, 0x1c1c7c, 0xfefe2e1e, 0x3e3efe,
			0xffffeffc, 0xfcfcffff, 0xfefeeef0, 0xf8f8fefe,
			0xfefeee00, 0x7070fefe, 0xfefeee00, 0x2020fefe,
			0xfefeee00, 0xfefe, 0xfefeee00, 0x808fefe, 0xfefeee00,
			0x1c1cfefe, 0xfefeee1e, 0x3e3efefe, 0xffffecfc,
			0xffffffff, 0xffffe8f8, 0xffffffff, 0xffffe1f1,
			0xffffffff, 0xffffe3e3, 0xffffffff, 0xffffc7c7,
			0xffffffff, 0xffff8f8f, 0xffffffff, 0xffff0f1f,
			0xffffffff, 0xffff2f3f, 0xffffffff, 0xfffcecfc,
			0xffffffff, 0xfff8e8f8, 0xffffffff, 0xfff1e1f1,
			0xffffffff, 0xffe3e3e3, 0xffffffff, 0x0, 0x0, 0xff8f8f8f,
			0xffffffff, 0xff1f0f1f, 0xffffffff, 0xff3f2f3f,
			0xffffffff, 0xfcfcecfe, 0xfefeffff, 0xf8f8e8fc, 0xfcffff,
			0xf0f0e0f0, 0xfefe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
			0x1e1e0e1e, 0xfefe, 0x3f3f2f7f, 0x7fffff, 0xfcfceefe,
			0xfefefefc, 0xf8f8ecfc, 0xfcfcf8, 0xf0f0e8f0, 0xf8f0,
			0x60606000, 0x60, 0x0, 0x0, 0xc0c0c00, 0xc, 0x1e1e2e1e,
			0x3e1e, 0x3f3f6f7f, 0x7f7f3f, 0xfcfeeffe, 0xfefefcfc,
			0xf8fdeffc, 0xfcf8f8, 0xf0faeef0, 0xf0f0, 0x60746c00,
			0x6060, 0x282800, 0x0, 0xc5c6c00, 0xc0c, 0x1ebeee1e,
			0x1e1e, 0x3f7fef7f, 0x7f3f3f, 0xffffeefe, 0xfefcfcfc,
			0xffffecfc, 0xf8f8f8, 0xfefee8f0, 0xf0f0f0, 0x7c7c6000,
			0x606060, 0x7c7c0000, 0x44, 0x7c7c0c00, 0xc0c0c,
			0xfefe2e1e, 0x1e1e1e, 0xffff6f7f, 0x3f3f3f, 0xffffeffe,
			0xfcfcfcff, 0xffffeffc, 0xf8f8f8ff, 0xfefeeef0,
			0xf0f0f0fe, 0xfefeee00, 0x6060e2fe, 0xfefeee00, 0xc6fe,
			0xfefeee00, 0xc0c8efe, 0xfefeee1e, 0x1e1e1efe, 0xffffef7f,
			0x3f3f3fff, 0xffffefff, 0xfcfcffff, 0xffffefff,
			0xf8f8ffff, 0xffffefff, 0xf0f1ffff, 0xffffefff,
			0x60e3ffff, 0xffffefff, 0xc7ffff, 0xffffefff, 0xc8fffff,
			0xffffefff, 0x1e1fffff, 0xffffefff, 0x3f3fffff, };

	// Endgame
	public static final int SCALE_FACTOR_DRAW = 0;
	public static final int SCALE_FACTOR_DRAWISH = 100;
	public static final int SCALE_FACTOR_DEFAULT = 1000;
	public static final int[] CLOSER_SQUARES = { 0, 0, 100, 80, 60,
			40, 20, 10 };
	// Distances to the corners
	public static final int[] TO_CORNERS = { 100, 90, 80, 70, 70, 80,
			90, 100, 90, 70, 60, 50, 50, 60, 70, 90, 80, 60, 40, 30,
			30, 40, 60, 80, 70, 50, 30, 20, 20, 30, 50, 70, 70, 50,
			30, 20, 20, 30, 50, 70, 80, 60, 40, 30, 30, 40, 60, 80,
			90, 70, 60, 50, 50, 60, 70, 90, 100, 90, 80, 70, 70, 80,
			90, 100, };

	public static final int[] TO_COLOR_CORNERS = { 130, 140, 150, 160,
			170, 180, 190, 200, 140, 130, 140, 150, 160, 170, 180,
			190, 150, 140, 125, 140, 140, 155, 170, 180, 160, 150,
			140, 110, 120, 140, 160, 170, 170, 160, 140, 120, 110,
			140, 150, 160, 180, 170, 155, 140, 140, 125, 140, 150,
			190, 180, 170, 160, 150, 140, 130, 140, 200, 190, 180,
			170, 160, 150, 140, 130 };

	// This is crucial to the evaluation and stores the value of a constant in
	// both the opening and endgame, for example, the position of a pawn might
	// be weak in the opening but strong in the endgame, this method allows us
	// to store this easily
	public static int S(int opening, int endgame) {
		return (opening << 16) + endgame;
	}

}
